{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "print(\"Current Working Directory \" , os.getcwd())\n",
    "os.chdir(\"/Users/javierlasa/Downloads\")\n",
    "print(\"Current Working Directory \" , os.getcwd())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting python-decouple\n",
      "  Downloading python-decouple-3.3.tar.gz (10 kB)\n",
      "Building wheels for collected packages: python-decouple\n",
      "  Building wheel for python-decouple (setup.py) ... \u001b[?25ldone\n",
      "\u001b[?25h  Created wheel for python-decouple: filename=python_decouple-3.3-py3-none-any.whl size=9024 sha256=18c383633ac549a5ba215a54224d55ae4c8104aec5ca2594823304f7b104fa10\n",
      "  Stored in directory: /Users/javierlasa/Library/Caches/pip/wheels/89/05/0c/780f3533d4fd7f9abdaafb2acdabdfe5542efb9fd15456030a\n",
      "Successfully built python-decouple\n",
      "Installing collected packages: python-decouple\n",
      "Successfully installed python-decouple-3.3\n",
      "Requirement already satisfied: webhoseio in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (0.5)\n",
      "Requirement already satisfied: requests>=2.0.0 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from webhoseio) (2.24.0)\n",
      "Requirement already satisfied: chardet<4,>=3.0.2 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.0.0->webhoseio) (3.0.4)\n",
      "Requirement already satisfied: idna<3,>=2.5 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.0.0->webhoseio) (2.10)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.0.0->webhoseio) (2020.6.20)\n",
      "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from requests>=2.0.0->webhoseio) (1.25.9)\n"
     ]
    }
   ],
   "source": [
    "#Configure API\n",
    "!pip install python-decouple\n",
    "!pip install webhoseio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import webhoseio\n",
    "from decouple import config\n",
    "\n",
    "webhoseio.config(token=\"\")\n",
    "\n",
    "query_params = {\n",
    "\n",
    "\"q\": \"language:english organization:Amazon Pharmacy language:english is_first:true\",\n",
    "\n",
    "\"ts\": \"1605236719963\",\n",
    "\n",
    "\"sort\": \"crawled\"\n",
    "\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Get the first batch of 100 news posts, add them to newsfeeds - a Python array of JSONs\n",
    "output = webhoseio.query(\"filterWebContent\", query_params)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "newsfeeds = []\n",
    "for post in output['posts']:\n",
    "    newsfeeds.append(post)\n",
    "len(newsfeeds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'persons': [],\n",
       " 'organizations': [{'name': 'american consultants rx services proenza schouler',\n",
       "   'sentiment': 'none'},\n",
       "  {'name': 'proenza schouler', 'sentiment': 'none'},\n",
       "  {'name': 'amazon trade-in amazon', 'sentiment': 'none'},\n",
       "  {'name': 'amazon music & entertainment amazon devices', 'sentiment': 'none'},\n",
       "  {'name': 'amazon home services careington dental try amazon',\n",
       "   'sentiment': 'none'},\n",
       "  {'name': 'amazon', 'sentiment': 'none'}],\n",
       " 'locations': []}"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "newsfeeds[0]['entities']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "141"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check the remaining API call limiit and how many more posts are left (e.g. 1 ca\n",
    "output['requestsLeft']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2179"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# print(output['totalResults']) # to see total available posts\n",
    "num_more_posts = output['moreResultsAvailable']\n",
    "num_more_posts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2279\n"
     ]
    }
   ],
   "source": [
    "#Get the next batches and add them to newsfeeds\n",
    "count = 0\n",
    "while count < num_more_posts:    \n",
    "    output = webhoseio.get_next()\n",
    "    for post in output['posts']:\n",
    "        newsfeeds.append(post)\n",
    "    count += 100\n",
    "print(len(newsfeeds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Write the JSONs to a data file as one line per post JSON object\n",
    "import json\n",
    "\n",
    "with open(\"webhose_amazon.json\", \"w\") as data_file:\n",
    "    for feed in newsfeeds:\n",
    "        line = json.dumps(feed)\n",
    "        data_file.write(line)\n",
    "        data_file.write(\"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2279\n"
     ]
    }
   ],
   "source": [
    "#Read the JSON file back into Python array of JSON objects and confirm the count\n",
    "json_data=open(\"webhose_amazon.json\").readlines()\n",
    "newsfeeds_read = []\n",
    "for line in json_data:\n",
    "    newsfeeds_read.append(json.loads(line))\n",
    "print(len(newsfeeds_read))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'thread': {'uuid': 'a5cf8a1c6cb9e8a8f8b5b7502913d330f1ee6129',\n",
       "  'url': 'https://2spendless.press/plastic-masks-ppe-biomedical-waste-choke-water-bodies-in-india/',\n",
       "  'site_full': '2spendless.press',\n",
       "  'site': '2spendless.press',\n",
       "  'site_section': '',\n",
       "  'site_categories': ['media'],\n",
       "  'section_title': '',\n",
       "  'title': 'Plastic Masks, PPE, Biomedical Waste Choke Water Bodies In India - 2 Spend Less Press',\n",
       "  'title_full': 'Plastic Masks, PPE, Biomedical Waste Choke Water Bodies In India - 2 Spend Less Press',\n",
       "  'published': '2020-11-14T02:00:00.000+02:00',\n",
       "  'replies_count': 0,\n",
       "  'participants_count': 1,\n",
       "  'site_type': 'news',\n",
       "  'country': 'US',\n",
       "  'spam_score': 1.0,\n",
       "  'main_image': 'https://2spendless.press/wp-content/uploads/2017/07/eshop.jpg',\n",
       "  'performance_score': 0,\n",
       "  'domain_rank': None,\n",
       "  'reach': None,\n",
       "  'social': {'facebook': {'likes': 0, 'comments': 0, 'shares': 0},\n",
       "   'gplus': {'shares': 0},\n",
       "   'pinterest': {'shares': 0},\n",
       "   'linkedin': {'shares': 0},\n",
       "   'stumbledupon': {'shares': 0},\n",
       "   'vk': {'shares': 0}}},\n",
       " 'uuid': 'a5cf8a1c6cb9e8a8f8b5b7502913d330f1ee6129',\n",
       " 'url': 'https://2spendless.press/plastic-masks-ppe-biomedical-waste-choke-water-bodies-in-india/',\n",
       " 'ord_in_thread': 0,\n",
       " 'parent_url': None,\n",
       " 'author': 'Spendless Press',\n",
       " 'published': '2020-11-14T02:00:00.000+02:00',\n",
       " 'title': 'Plastic Masks, PPE, Biomedical Waste Choke Water Bodies In India - 2 Spend Less Press',\n",
       " 'text': 'Plastic Masks, PPE, Biomedical Waste Choke Water Bodies In India Plastic Masks, PPE, Biomedical Waste Choke Water Bodies In India American Consultants Rx Free Rx Discount Cards Download! Download your free ACRX discount prescription card today and save up to 80% off of your medicine! Name: PLEASE DONATE TODAY!\\nFace Masks On Sale For Covid-19\\n<br /> EBAY TRENDING DEALS Save Up To 80% Off Of Medicine For Pets Today! Download your free ACRX discount prescription card today and save up to 80% off of your medicine for pets! Name: Shop Amazon – Create an Amazon Baby Registry! Affliction Homasen Safety Face Shield\\n<br /> ACRX Discount Rx Cards Donated To Charities,Businesses,& Individuals To Help Communities In Need Of Rx Help! Amazon Home Services Careington Dental Try Amazon Prime 30-Day Free Trial Amazon Music & Entertainment Amazon Devices – Fire TV Trade In Deal Amazon Trade-In Amazon Prime 30 Day Free Trial Amazon Music LIGHT IN THE BOX-MASK SALE Ouidad LEATHER COATS ETC. Audible- Romance Stop Spending All Your Money On Pet Medicine! Get The ACRX Discount Card Today And Save Up To 80%! Download the free ACRX pet discount prescription card today at http://www.acrxnews.com and save up t0 80% off of pet (human equivalent) medicine at the pharmacy today! GIFT CARDS ',\n",
       " 'highlightText': '',\n",
       " 'highlightTitle': '',\n",
       " 'highlightThreadTitle': '',\n",
       " 'language': 'english',\n",
       " 'external_links': ['http://www.acrxnews.com',\n",
       "  'https://rover.ebay.com/rover/1/711-53200-19255-0/1?icep_id=114&ipn=icep&toolid=20004&campid=5337600530&mpre=https%3A%2F%2Fwww.ebay.com%2Ftrending',\n",
       "  'https://rover.ebay.com/rover/1/711-53200-19255-0/1',\n",
       "  'https://www.rover.ebay.com/rover/1/711-53200-19255-0/1?icep_id=114&ipn=icep&toolid=20004&campid=5337600530&mpre=https%3A%2F%2Fwww.ebay.com%2Ftrending',\n",
       "  'http://acrxnews.com'],\n",
       " 'external_images': [],\n",
       " 'entities': {'persons': [],\n",
       "  'organizations': [{'name': 'ppe', 'sentiment': 'none'},\n",
       "   {'name': 'biomedical waste choke', 'sentiment': 'none'},\n",
       "   {'name': 'biomedical waste choke water bodies in india plastic masks',\n",
       "    'sentiment': 'none'},\n",
       "   {'name': 'amazon trade-in amazon', 'sentiment': 'none'},\n",
       "   {'name': 'choke water bodies in india american consultants',\n",
       "    'sentiment': 'none'},\n",
       "   {'name': 'amazon music & entertainment amazon devices',\n",
       "    'sentiment': 'none'},\n",
       "   {'name': 'amazon home services careington dental try amazon',\n",
       "    'sentiment': 'none'},\n",
       "   {'name': 'amazon', 'sentiment': 'none'}],\n",
       "  'locations': [{'name': 'india', 'sentiment': 'none'}]},\n",
       " 'rating': None,\n",
       " 'crawled': '2020-11-14T14:37:31.000+02:00',\n",
       " 'updated': '2020-11-14T14:37:31.000+02:00'}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "newsfeeds_read[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Proenza Schouler on creative upcycling in the lockdown - American Consultants Rx Services\n",
      "https://americanconsultantsrx.services/proenza-schouler-on-creative-upcycling-in-the-lockdown/\n",
      "2020-11-13T02:00:00.000+02:00\n"
     ]
    }
   ],
   "source": [
    "for feed in newsfeeds_read:\n",
    "    print(feed['title'])\n",
    "    print(feed['url'])\n",
    "    print(feed['published'])\n",
    "    break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2279\n"
     ]
    }
   ],
   "source": [
    "#open dedup json data and validate number of elements in list\n",
    "json_data=open(\"webhose_amazon.json\").readlines()\n",
    "newsfeeds_read = []\n",
    "for line in json_data:\n",
    "    newsfeeds_read.append(json.loads(line))\n",
    "print(len(newsfeeds_read))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: print_schema in ./opt/anaconda3/lib/python3.8/site-packages (1.1.1)\n",
      "Requirement already satisfied: requests in ./opt/anaconda3/lib/python3.8/site-packages (from print_schema) (2.24.0)\n",
      "Requirement already satisfied: idna<3,>=2.5 in ./opt/anaconda3/lib/python3.8/site-packages (from requests->print_schema) (2.10)\n",
      "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in ./opt/anaconda3/lib/python3.8/site-packages (from requests->print_schema) (1.25.9)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in ./opt/anaconda3/lib/python3.8/site-packages (from requests->print_schema) (2020.6.20)\n",
      "Requirement already satisfied: chardet<4,>=3.0.2 in ./opt/anaconda3/lib/python3.8/site-packages (from requests->print_schema) (3.0.4)\n",
      "|-  list \t - list [2279] <class 'dict'>\n",
      "   |- thread\t - <class 'dict'>\n",
      "      |- uuid\t - <class 'str'>\n",
      "      |- url\t - <class 'str'>\n",
      "      |- site_full\t - <class 'str'>\n",
      "      |- site\t - <class 'str'>\n",
      "      |- site_section\t - <class 'str'>\n",
      "      |- site_categories\t - list [1] <class 'str'>\n",
      "      |- section_title\t - <class 'str'>\n",
      "      |- title\t - <class 'str'>\n",
      "      |- title_full\t - <class 'str'>\n",
      "      |- published\t - <class 'str'>\n",
      "      |- replies_count\t - <class 'int'>\n",
      "      |- participants_count\t - <class 'int'>\n",
      "      |- site_type\t - <class 'str'>\n",
      "      |- country\t - <class 'str'>\n",
      "      |- spam_score\t - <class 'float'>\n",
      "      |- main_image\t - <class 'str'>\n",
      "      |- performance_score\t - <class 'int'>\n",
      "Not supported\n",
      "Not supported\n",
      "      |- social\t - <class 'dict'>\n",
      "         |- facebook\t - <class 'dict'>\n",
      "            |- likes\t - <class 'int'>\n",
      "            |- comments\t - <class 'int'>\n",
      "            |- shares\t - <class 'int'>\n",
      "         |- gplus\t - <class 'dict'>\n",
      "            |- shares\t - <class 'int'>\n",
      "         |- pinterest\t - <class 'dict'>\n",
      "            |- shares\t - <class 'int'>\n",
      "         |- linkedin\t - <class 'dict'>\n",
      "            |- shares\t - <class 'int'>\n",
      "         |- stumbledupon\t - <class 'dict'>\n",
      "            |- shares\t - <class 'int'>\n",
      "         |- vk\t - <class 'dict'>\n",
      "            |- shares\t - <class 'int'>\n",
      "   |- uuid\t - <class 'str'>\n",
      "   |- url\t - <class 'str'>\n",
      "   |- ord_in_thread\t - <class 'int'>\n",
      "Not supported\n",
      "   |- author\t - <class 'str'>\n",
      "   |- published\t - <class 'str'>\n",
      "   |- title\t - <class 'str'>\n",
      "   |- text\t - <class 'str'>\n",
      "   |- highlightText\t - <class 'str'>\n",
      "   |- highlightTitle\t - <class 'str'>\n",
      "   |- highlightThreadTitle\t - <class 'str'>\n",
      "   |- language\t - <class 'str'>\n",
      "   |- external_links\t - list [5] <class 'str'>\n",
      "   |- external_images\t - list [0] <empty list>\n",
      "   |- entities\t - <class 'dict'>\n",
      "      |- persons\t - list [0] <empty list>\n",
      "      |- organizations\t - list [6] <class 'dict'>\n",
      "         |- name\t - <class 'str'>\n",
      "         |- sentiment\t - <class 'str'>\n",
      "      |- locations\t - list [0] <empty list>\n",
      "Not supported\n",
      "   |- crawled\t - <class 'str'>\n",
      "   |- updated\t - <class 'str'>\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "!pip install print_schema\n",
    "from print_schema import print_schema\n",
    "my_dict = newsfeeds_read\n",
    "print_schema(my_dict, indent=3, dense=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Suspensions (e.g. liquid amoxicillin or fluconazole) Vaccines Vitamins and over-the-counter (OTC) items\n",
      "Moreover, Amazon Pharmacy will be available in 45 states. One other thing to note is that it will not give customers a 90-day refill unless specified by their primary physician. That said, Amazon will instead allow for 30-day refills. Amazon Pharmacy Takes PillPack Buy Further\n",
      "Additionally, the firm also announced a number of different savings benefits for Amazon Prime members on Amazon Pharmacy. This includes major savings when paying without insurance like 80% off generic and 40% off brand-name medications. Prime members also receive unlimited, two-day shipping. And members can access savings at more than 50,000 other pharmacies across the U.S.\n",
      "Meanwhile, non-Prime customers can get their medications with free, five-day delivery — or pay $5.99 for two-day shipping.\n",
      "TJ Parker, vice president of Amazon Pharmacy, had this to say about the AMZN stock news:\n",
      "“We designed Amazon Pharmacy to put customers first — bringing Amazon’s customer obsession to an industry that can be inconvenient and confusing. We work hard behind the scenes to handle complications seamlessly so anyone who needs a prescription can understand their options, place their order for the lowest available price, and have their medication delivered quickly.”\n",
      "On the other hand, retail pharmacy companies are hurting on Tuesday after this move by Amazon. Drugstore stocks such as CVS Health (NYSE: CVS ), GoodRx Holdings (NASDAQ: GDRX ) and Rite Aid (NYSE: RAD ) are taking a beating.\n",
      "Overall, this move has been in the works for a few years. Amazon acquired PillPack in 2018 to truly kick off its pharmacy aspirations. And now, two years later, Amazon Pharmacy is here.\n",
      "AMZN stock was up less than 1% as of Tuesday morning.\n",
      "On the date of publication, Nick Clarkson did not have (either directly or indirectly) any positions in the securities mentioned in this article.\n",
      "Nick Clarkson is a web editor at InvestorPlace.\n",
      "Article printed from InvestorPlace Media, https://investorplace.com/2020/11/amazon-pharmacy-news-what-drugs-are-available-how-does-it-work/.\n",
      "©2020 InvestorPlace Media, LLC\n"
     ]
    }
   ],
   "source": [
    "text = newsfeeds_read[420]['text']\n",
    "print(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os, pyspark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "sc = pyspark.SparkContext()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0.1\n"
     ]
    }
   ],
   "source": [
    "# check if spark context is defined\n",
    "print(sc.version)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages/pyspark/sql/context.py:75: DeprecationWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "# importing some libraries\n",
    "import pandas as pd\n",
    "import pyspark\n",
    "from pyspark.sql import SQLContext\n",
    "sqlContext = SQLContext(sc)\n",
    "# stuff we'll need for text processing\n",
    "from nltk.corpus import stopwords\n",
    "import re as re\n",
    "from pyspark.ml.feature import CountVectorizer , IDF\n",
    "# stuff we'll need for building the model\n",
    "\n",
    "from pyspark.mllib.linalg import Vector, Vectors\n",
    "from pyspark.mllib.clustering import LDA, LDAModel\n",
    "from nltk.stem.wordnet import WordNetLemmatizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "# reading the data\n",
    "data = sqlContext.read.json(\"webhose_amazon.json\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Exception ignored in: <function JavaWrapper.__del__ at 0x12123bee0>\n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages/pyspark/ml/wrapper.py\", line 42, in __del__\n",
      "    if SparkContext._active_spark_context and self._java_obj is not None:\n",
      "AttributeError: 'CountVectorizer' object has no attribute '_java_obj'\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total number of titles: 2279\n"
     ]
    }
   ],
   "source": [
    "amazon_data = []\n",
    "with open('webhose_amazon.json', 'r') as f:\n",
    "    for line in f.readlines():\n",
    "        amazon_data.append(json.loads(line))\n",
    "        \n",
    "feed_titles = [feed['title'] for feed in amazon_data]\n",
    "print(\"Total number of titles: \" + str(len(feed_titles)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages/pyspark/sql/context.py:75: DeprecationWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------------+\n",
      "|               title|\n",
      "+--------------------+\n",
      "|Proenza Schouler ...|\n",
      "|Plastic Masks, PP...|\n",
      "|How Ava Max Feels...|\n",
      "|42 Best Gifts To ...|\n",
      "|‘RHOA’s Kenya Moo...|\n",
      "|Amazon's Leap Int...|\n",
      "|After a Coronavir...|\n",
      "|Add $30, Get $5 A...|\n",
      "|CVS Last Chance C...|\n",
      "|FREE Stuff at CVS...|\n",
      "|The smart Trick o...|\n",
      "|Reliance acquires...|\n",
      "|Jennifer Lopez to...|\n",
      "|The adrafinil for...|\n",
      "|Stacey & Darcey A...|\n",
      "|Would UK be ready...|\n",
      "|Jim Jones Returns...|\n",
      "|How to Resell on ...|\n",
      "|Facing the second...|\n",
      "|Reliance Retail b...|\n",
      "+--------------------+\n",
      "only showing top 20 rows\n",
      "\n",
      "+--------------------+\n",
      "|              ngrams|\n",
      "+--------------------+\n",
      "|[P r o, r o e, o ...|\n",
      "|[P l a, l a s, a ...|\n",
      "|[H o w, o w  , w ...|\n",
      "|[4 2  , 2   B,   ...|\n",
      "|[‘ R H, R H O, H ...|\n",
      "|[A m a, m a z, a ...|\n",
      "|[A f t, f t e, t ...|\n",
      "|[A d d, d d  , d ...|\n",
      "|[C V S, V S  , S ...|\n",
      "|[F R E, R E E, E ...|\n",
      "|[T h e, h e  , e ...|\n",
      "|[R e l, e l i, l ...|\n",
      "|[J e n, e n n, n ...|\n",
      "|[T h e, h e  , e ...|\n",
      "|[S t a, t a c, a ...|\n",
      "|[W o u, o u l, u ...|\n",
      "|[J i m, i m  , m ...|\n",
      "|[H o w, o w  , w ...|\n",
      "|[F a c, a c i, c ...|\n",
      "|[R e l, e l i, l ...|\n",
      "+--------------------+\n",
      "only showing top 20 rows\n",
      "\n",
      "+--------------------+\n",
      "|              vector|\n",
      "+--------------------+\n",
      "|(8328,[0,11,12,13...|\n",
      "|(8328,[14,16,37,4...|\n",
      "|(8328,[31,34,50,6...|\n",
      "|(8328,[67,100,114...|\n",
      "|(8328,[11,13,16,3...|\n",
      "|(8328,[1,2,3,4,36...|\n",
      "|(8328,[11,13,16,3...|\n",
      "|(8328,[0,1,2,3,4,...|\n",
      "|(8328,[0,103,114,...|\n",
      "|(8328,[166,192,44...|\n",
      "|(8328,[11,17,34,5...|\n",
      "|(8328,[14,16,37,5...|\n",
      "|(8328,[0,16,36,48...|\n",
      "|(8328,[34,52,93,9...|\n",
      "|(8328,[62,74,91,1...|\n",
      "|(8328,[12,46,52,9...|\n",
      "|(8328,[11,13,14,1...|\n",
      "|(8328,[0,1,2,3,4,...|\n",
      "|(8328,[10,11,12,1...|\n",
      "|(8328,[12,16,46,5...|\n",
      "+--------------------+\n",
      "only showing top 20 rows\n",
      "\n",
      "+--------------------+\n",
      "|             minHash|\n",
      "+--------------------+\n",
      "|[[3.9315087E7], [...|\n",
      "|[[7.707868E7], [2...|\n",
      "|[[8.4004624E7], [...|\n",
      "|[[3.9315087E7], [...|\n",
      "|[[5.4487335E7], [...|\n",
      "|[[2.991545E7], [3...|\n",
      "|[[3.2884278E7], [...|\n",
      "|[[1.21933262E8], ...|\n",
      "|[[1.837221E7], [1...|\n",
      "|[[1.837221E7], [1...|\n",
      "|[[2376719.0], [5....|\n",
      "|[[9467708.0], [5....|\n",
      "|[[1.4765848E8], [...|\n",
      "|[[1.34961907E8], ...|\n",
      "|[[3.7171484E7], [...|\n",
      "|[[6333835.0], [1....|\n",
      "|[[1.3424824E7], [...|\n",
      "|[[1.02803898E8], ...|\n",
      "|[[6.9987691E7], [...|\n",
      "|[[7.2461384E7], [...|\n",
      "+--------------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages/pyspark/sql/context.py:117: DeprecationWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------------+--------------------+----------------+\n",
      "|            datasetA|            datasetB|jaccard_distance|\n",
      "+--------------------+--------------------+----------------+\n",
      "|[733, The kids ar...|[733, The kids ar...|             0.0|\n",
      "|[1419, Google Ale...|[1574, Google Ale...|             0.0|\n",
      "|[257, It'll take ...|[257, It'll take ...|             0.0|\n",
      "|[1704, Defensoría...|[1794, Defensoría...|             0.0|\n",
      "|[1308, November 2...|[1328, November 2...|             0.0|\n",
      "|[1999, Financial ...|[2008, Financial ...|             0.0|\n",
      "|[2216, Amazon’s L...|[2216, Amazon’s L...|             0.0|\n",
      "|[46, Reliance Ret...|[34, Reliance Ret...|             0.0|\n",
      "|[1647, Down 36% Y...|[1647, Down 36% Y...|             0.0|\n",
      "|[1513, Amazon Pha...|[1509, Amazon Pha...|             0.0|\n",
      "|[1708, Piedmont T...|[1850, Piedmont T...|             0.0|\n",
      "|[1324, Chief Oper...|[1324, Chief Oper...|             0.0|\n",
      "|[1301, Wounded Wa...|[1287, Wounded Wa...|             0.0|\n",
      "|[1634, Eta y lota...|[1534, Eta y lota...|             0.0|\n",
      "|[1156, Healthware...|[1084, Healthware...|             0.0|\n",
      "|[2034, Amazon eye...|[2049, Amazon eye...|             0.0|\n",
      "|[2038, Amazon eye...|[2031, Amazon eye...|             0.0|\n",
      "|[2044, Amazon eye...|[2049, Amazon eye...|             0.0|\n",
      "|[2056, Amazon eye...|[2047, Amazon eye...|             0.0|\n",
      "|[2058, Amazon eye...|[2062, Amazon eye...|             0.0|\n",
      "+--------------------+--------------------+----------------+\n",
      "only showing top 20 rows\n",
      "\n",
      "+--------------------+--------------------+\n",
      "|               title|               title|\n",
      "+--------------------+--------------------+\n",
      "|LVMH launches Lif...|LVMH launches Lif...|\n",
      "+--------------------+--------------------+\n",
      "\n",
      "+--------------------+------------------------+\n",
      "|               title|min(datasetA.id AS `id`)|\n",
      "+--------------------+------------------------+\n",
      "|Healthwarehouse.c...|                    1084|\n",
      "|Amazon Pharmacy i...|                     594|\n",
      "|Amazon opens onli...|                    1179|\n",
      "|Timelapse setup o...|                    1334|\n",
      "|Insulin, inhalers...|                     966|\n",
      "|2020 Celebration ...|                    1592|\n",
      "|A Look at Amazon’...|                    1658|\n",
      "|Amazon opens onli...|                     203|\n",
      "|Joe and Jill Bide...|                    1787|\n",
      "|Amazon enters int...|                     248|\n",
      "|Bring the Apple C...|                    1390|\n",
      "|Drugstore Stocks ...|                     338|\n",
      "|Kindle Daily Deal...|                    2124|\n",
      "|Amazon opens onli...|                     750|\n",
      "|Investors are bet...|                    1100|\n",
      "|GoodRx downplays ...|                    1410|\n",
      "|How Amazon Pharma...|                     220|\n",
      "|25 Senior Discoun...|                    1748|\n",
      "|Numbats at the br...|                    2226|\n",
      "|Disruption target...|                     559|\n",
      "+--------------------+------------------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(1348, 2279, 1351)"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Deduplicating\n",
    "from pyspark import SparkContext\n",
    "from pyspark.sql import SparkSession\n",
    "spark = SparkSession(sc)\n",
    "df = spark.createDataFrame([\n",
    "    (k, t, list(t)) for k, t in enumerate(feed_titles) if len(list(t)) >=3],\n",
    "    ['id', 'title', 'title_characters'])\n",
    "df.select('title').show()\n",
    "\n",
    "from pyspark.ml.feature import NGram\n",
    "ngram = NGram(n=3, inputCol='title_characters', outputCol='ngrams')\n",
    "ngram_df = ngram.transform(df)\n",
    "ngram_df.select('ngrams').show()\n",
    "\n",
    "from pyspark.ml.feature import CountVectorizer \n",
    "count_vectorizer = CountVectorizer(inputCol='ngrams', outputCol='vector', binary=True)\n",
    "model = count_vectorizer.fit(ngram_df)\n",
    "cv_df = model.transform(ngram_df)\n",
    "\n",
    "cv_df.select('vector').show()\n",
    "\n",
    "from pyspark.ml.feature import MinHashLSH\n",
    "min_hash = MinHashLSH(inputCol='vector', outputCol='minHash', seed=0, numHashTables=10)\n",
    "model = min_hash.fit(cv_df)\n",
    "hash_df = model.transform(cv_df)\n",
    "hash_df.select('minHash').show()\n",
    "\n",
    "joined_rows = model.approxSimilarityJoin(cv_df, cv_df, threshold=0.05, distCol='jaccard_distance')\n",
    "joined_rows.show()\n",
    "\n",
    "from pyspark.sql.functions import col\n",
    "joined_rows.filter(joined_rows.datasetA.id == 2211).select(col('datasetA.title'), col('datasetB.title')).show()\n",
    "\n",
    "deduplicated_df = joined_rows.groupby(col('datasetA.title')).min('datasetA.id')\n",
    "deduplicated_df.show()\n",
    "\n",
    "deduplicated_titles = deduplicated_df.toPandas()['title']\n",
    "\n",
    "len(deduplicated_titles), len(feed_titles), len(set(feed_titles))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "descriptions = data.rdd.map(lambda x : x['text']).filter(lambda x: x is not None)\n",
    "StopWords = stopwords.words(\"english\")\n",
    "lmtzr = WordNetLemmatizer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "tokens = descriptions.map( lambda document: document.strip().lower())               \\\n",
    "    .map( lambda document: re.split(\" \", document))          \\\n",
    "    .map( lambda word: [x for x in word if x.isalpha()])           \\\n",
    "    .map( lambda word: [x for x in word if len(x) > 3] )           \\\n",
    "    .map( lambda word: [x for x in word if x not in StopWords])    \\\n",
    "    .map( lambda word: [lmtzr.lemmatize(x,'v') for x in word]) \\\n",
    "    .zipWithIndex()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_txts = sqlContext.createDataFrame(tokens, [\"list_of_words\",'index'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------------+-----+\n",
      "|       list_of_words|index|\n",
      "+--------------------+-----+\n",
      "|[proenza, schoule...|    0|\n",
      "|[plastic, biomedi...|    1|\n",
      "|[feel, weeknd, fe...|    2|\n",
      "|[pair, unicorn, s...|    3|\n",
      "|[pics, kenya, moo...|    4|\n",
      "|[leap, healthcare...|    5|\n",
      "|[coronavirus, qui...|    6|\n",
      "|[deal, deal, amaz...|    7|\n",
      "|[november, last, ...|    8|\n",
      "|[november, free, ...|    9|\n",
      "|[november, leave,...|   10|\n",
      "|[reliance, indust...|   11|\n",
      "|[jennifer, lopez,...|   12|\n",
      "|[adrafinil, sale,...|   13|\n",
      "|[stacey, darcey, ...|   14|\n",
      "|[would, ready, pe...|   15|\n",
      "|[jones, return, s...|   16|\n",
      "|[chain, supply, s...|   17|\n",
      "|[face, second, tr...|   18|\n",
      "|[reliance, retail...|   19|\n",
      "+--------------------+-----+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df_txts.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TF\n",
    "cv = CountVectorizer(inputCol=\"list_of_words\", outputCol=\"raw_features\", vocabSize=5000, minDF=50.0, maxDF = 500)\n",
    "cvmodel = cv.fit(df_txts)\n",
    "result_cv = cvmodel.transform(df_txts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# IDF\n",
    "idf = IDF(inputCol=\"raw_features\", outputCol=\"features\")\n",
    "idfModel = idf.fit(result_cv)\n",
    "result_tfidf = idfModel.transform(result_cv) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------------+-----+--------------------+--------------------+\n",
      "|       list_of_words|index|        raw_features|            features|\n",
      "+--------------------+-----+--------------------+--------------------+\n",
      "|[proenza, schoule...|    0|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[plastic, biomedi...|    1|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[feel, weeknd, fe...|    2|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[pair, unicorn, s...|    3|(1113,[1,3,6,7,12...|(1113,[1,3,6,7,12...|\n",
      "|[pics, kenya, moo...|    4|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[leap, healthcare...|    5|(1113,[4,5,10,32,...|(1113,[4,5,10,32,...|\n",
      "|[coronavirus, qui...|    6|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[deal, deal, amaz...|    7|(1113,[16,27,31,5...|(1113,[16,27,31,5...|\n",
      "|[november, last, ...|    8|(1113,[4,6,16,25,...|(1113,[4,6,16,25,...|\n",
      "|[november, free, ...|    9|(1113,[6,16,25,36...|(1113,[6,16,25,36...|\n",
      "|[november, leave,...|   10|(1113,[5,12,13,18...|(1113,[5,12,13,18...|\n",
      "|[reliance, indust...|   11|(1113,[4,28,31,34...|(1113,[4,28,31,34...|\n",
      "|[jennifer, lopez,...|   12|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[adrafinil, sale,...|   13|(1113,[8,13,19,26...|(1113,[8,13,19,26...|\n",
      "|[stacey, darcey, ...|   14|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[would, ready, pe...|   15|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[jones, return, s...|   16|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[chain, supply, s...|   17|(1113,[8,12,13,20...|(1113,[8,12,13,20...|\n",
      "|[face, second, tr...|   18|(1113,[0,1,2,9,11...|(1113,[0,1,2,9,11...|\n",
      "|[reliance, retail...|   19|(1113,[6,10,21,22...|(1113,[6,10,21,22...|\n",
      "+--------------------+-----+--------------------+--------------------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "result_tfidf.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: ipython==7.10.0 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (7.10.0)\n",
      "Requirement already satisfied: pickleshare in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (0.7.5)\n",
      "Requirement already satisfied: traitlets>=4.2 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (4.3.3)\n",
      "Requirement already satisfied: pygments in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (2.6.1)\n",
      "Requirement already satisfied: appnope; sys_platform == \"darwin\" in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (0.1.0)\n",
      "Requirement already satisfied: setuptools>=18.5 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (49.2.0.post20200714)\n",
      "Requirement already satisfied: pexpect; sys_platform != \"win32\" in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (4.8.0)\n",
      "Requirement already satisfied: jedi>=0.10 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (0.17.1)\n",
      "Requirement already satisfied: prompt-toolkit<3.1.0,>=2.0.0 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (3.0.5)\n",
      "Requirement already satisfied: backcall in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (0.2.0)\n",
      "Requirement already satisfied: decorator in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from ipython==7.10.0) (4.4.2)\n",
      "Requirement already satisfied: ipython-genutils in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from traitlets>=4.2->ipython==7.10.0) (0.2.0)\n",
      "Requirement already satisfied: six in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from traitlets>=4.2->ipython==7.10.0) (1.15.0)\n",
      "Requirement already satisfied: ptyprocess>=0.5 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from pexpect; sys_platform != \"win32\"->ipython==7.10.0) (0.6.0)\n",
      "Requirement already satisfied: parso<0.8.0,>=0.7.0 in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from jedi>=0.10->ipython==7.10.0) (0.7.0)\n",
      "Requirement already satisfied: wcwidth in /Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages (from prompt-toolkit<3.1.0,>=2.0.0->ipython==7.10.0) (0.2.5)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package stopwords to\n",
      "[nltk_data]     /Users/javierlasa/nltk_data...\n",
      "[nltk_data]   Package stopwords is already up-to-date!\n"
     ]
    }
   ],
   "source": [
    "!pip install ipython==7.10.0\n",
    "import gensim\n",
    "import nltk\n",
    "nltk.download('stopwords')\n",
    "import pyLDAvis\n",
    "import pyLDAvis.sklearn\n",
    "pyLDAvis.enable_notebook()\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.decomposition import LatentDirichletAllocation\n",
    "from gensim.models.ldamodel import LdaModel\n",
    "from nltk.stem.wordnet import WordNetLemmatizer\n",
    "stopwords = set(nltk.corpus.stopwords.words('english'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "def tokenize_titles(title):\n",
    "    tokens = nltk.word_tokenize(title)\n",
    "    lmtzr = WordNetLemmatizer()\n",
    "    filtered_tokens = []\n",
    "    for token in tokens:\n",
    "        token = token.replace(\"'s\", \" \").replace(\"n’t\", \" not\").replace(\"’ve\", \" have\")\n",
    "        token = re.sub(r'[^a-zA-Z0-9 ]', '', token)\n",
    "        if token not in stopwords:\n",
    "            filtered_tokens.append(token.lower())\n",
    "    lemmas = [lmtzr.lemmatize(t,'v') for t in filtered_tokens]\n",
    "\n",
    "    return lemmas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/javierlasa/opt/anaconda3/lib/python3.8/site-packages/sklearn/feature_extraction/text.py:383: UserWarning: Your stop_words may be inconsistent with your preprocessing. Tokenizing the stop words generated tokens ['make'] not in stop_words.\n",
      "  warnings.warn('Your stop_words may be inconsistent with '\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1348, 500)\n"
     ]
    }
   ],
   "source": [
    "# Term-Document Matrix\n",
    "tf_vectorizer = CountVectorizer(strip_accents = 'unicode',\n",
    "                                stop_words = 'english',\n",
    "                                lowercase = True,\n",
    "                                tokenizer=tokenize_titles,\n",
    "                                max_features=500,\n",
    "                                token_pattern = r'\\\\b[a-zA-Z]{3,}\\\\b',\n",
    "                                max_df = 100, \n",
    "                                min_df = 2,\n",
    "                                ngram_range=(2,4))\n",
    "dtm_tf = tf_vectorizer.fit_transform(deduplicated_titles)\n",
    "print(dtm_tf.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [],
   "source": [
    "import time\n",
    "import gensim.corpora as corpora\n",
    "from gensim.test.utils import common_corpus, common_dictionary\n",
    "\n",
    "lda_tf = LatentDirichletAllocation(n_components=10, \n",
    "                                   max_iter=200,\n",
    "                                   learning_method='online', \n",
    "                                   random_state = 0)\n",
    "lda_tf.fit(dtm_tf)\n",
    "\n",
    "model = LdaModel(common_corpus, 10, common_dictionary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Topic cluster:  0\n",
      "nasdaq\n",
      "close\n",
      "jones\n",
      "trade\n",
      "paper\n",
      "toilet\n",
      "amid\n",
      "rise\n",
      "gain\n",
      "sales\n",
      "lose\n",
      "fell\n",
      "economy\n",
      "depot\n",
      "economic\n",
      "Topic cluster:  1\n",
      "test\n",
      "sit\n",
      "ohio\n",
      "county\n",
      "school\n",
      "locations\n",
      "rapid\n",
      "case\n",
      "quarantine\n",
      "spread\n",
      "department\n",
      "university\n",
      "travel\n",
      "result\n",
      "symptoms\n",
      "Topic cluster:  2\n",
      "supplement\n",
      "specialty\n",
      "chapter\n",
      "south\n",
      "players\n",
      "study\n",
      "revenue\n",
      "rate\n",
      "bluebonnet\n",
      "summr\n",
      "country\n",
      "growth\n",
      "version\n",
      "type\n",
      "vitamins\n",
      "Topic cluster:  3\n",
      "medicine\n",
      "toy\n",
      "without\n",
      "users\n",
      "pillpack\n",
      "hard\n",
      "giant\n",
      "vice\n",
      "design\n",
      "consumers\n",
      "build\n",
      "behind\n",
      "enter\n",
      "announcement\n",
      "consumer\n",
      "Topic cluster:  4\n",
      "mywalgreens\n",
      "reward\n",
      "wellness\n",
      "loyalty\n",
      "cash\n",
      "mobile\n",
      "personalize\n",
      "balance\n",
      "percent\n",
      "ready\n",
      "feature\n",
      "pick\n",
      "eligible\n",
      "pharmacists\n",
      "range\n",
      "Topic cluster:  5\n",
      "crest\n",
      "body\n",
      "printable\n",
      "colgate\n",
      "toothpaste\n",
      "ibotta\n",
      "select\n",
      "reward\n",
      "hair\n",
      "laundry\n",
      "pack\n",
      "trial\n",
      "candy\n",
      "liquid\n",
      "register\n",
      "Topic cluster:  6\n",
      "competition\n",
      "buy\n",
      "acquisition\n",
      "bring\n",
      "corp\n",
      "found\n",
      "let\n",
      "secure\n",
      "separate\n",
      "kroger\n",
      "disrupt\n",
      "retailers\n",
      "lawmakers\n",
      "industries\n",
      "unite\n",
      "Topic cluster:  7\n",
      "threat\n",
      "drugstores\n",
      "insurers\n",
      "push\n",
      "analysts\n",
      "evolve\n",
      "economist\n",
      "competitive\n",
      "see\n",
      "drugstore\n",
      "generic\n",
      "logo\n",
      "snack\n",
      "supermarket\n",
      "uninsured\n",
      "Topic cluster:  8\n",
      "black\n",
      "thanksgiving\n",
      "friday\n",
      "americans\n",
      "mask\n",
      "hours\n",
      "wear\n",
      "public\n",
      "army\n",
      "sunday\n",
      "national\n",
      "vote\n",
      "former\n",
      "annual\n",
      "institute\n",
      "Topic cluster:  9\n",
      "cost\n",
      "biggest\n",
      "mention\n",
      "hundreds\n",
      "dollars\n",
      "accept\n",
      "retailer\n",
      "pressure\n",
      "financial\n",
      "smart\n",
      "long\n",
      "pay\n",
      "giant\n",
      "recent\n",
      "among\n",
      "Topic cluster:  10\n",
      "gift\n",
      "code\n",
      "paper\n",
      "page\n",
      "affiliate\n",
      "link\n",
      "photo\n",
      "coupons\n",
      "promo\n",
      "clip\n",
      "select\n",
      "click\n",
      "thumb\n",
      "disclosure\n",
      "final\n",
      "Topic cluster:  11\n",
      "cash\n",
      "extra\n",
      "present\n",
      "blog\n",
      "california\n",
      "simple\n",
      "utilize\n",
      "obtain\n",
      "reply\n",
      "amount\n",
      "individuals\n",
      "site\n",
      "usually\n",
      "near\n",
      "discover\n",
      "Topic cluster:  12\n",
      "card\n",
      "credit\n",
      "print\n",
      "bank\n",
      "reward\n",
      "money\n",
      "photo\n",
      "apple\n",
      "today\n",
      "cash\n",
      "bonus\n",
      "balance\n",
      "redeem\n",
      "account\n",
      "photos\n",
      "Topic cluster:  13\n",
      "facilities\n",
      "nurse\n",
      "staff\n",
      "vaccinate\n",
      "workers\n",
      "pfizer\n",
      "administer\n",
      "federal\n",
      "expect\n",
      "vaccination\n",
      "distribution\n",
      "emergency\n",
      "officials\n",
      "distribute\n",
      "administration\n",
      "Topic cluster:  14\n",
      "ability\n",
      "lead\n",
      "supply\n",
      "level\n",
      "data\n",
      "claim\n",
      "discuss\n",
      "challenge\n",
      "believe\n",
      "solutions\n",
      "quality\n",
      "manufacture\n",
      "remove\n",
      "express\n",
      "quickly\n",
      "Topic cluster:  15\n",
      "advertise\n",
      "media\n",
      "digital\n",
      "cookies\n",
      "network\n",
      "privacy\n",
      "facebook\n",
      "data\n",
      "content\n",
      "connect\n",
      "twitter\n",
      "consumer\n",
      "channel\n",
      "advance\n",
      "platforms\n",
      "Topic cluster:  16\n",
      "clinics\n",
      "healthcare\n",
      "primary\n",
      "role\n",
      "pharmacists\n",
      "partner\n",
      "boot\n",
      "communities\n",
      "every\n",
      "serve\n",
      "team\n",
      "operate\n",
      "proud\n",
      "play\n",
      "beauty\n",
      "Topic cluster:  17\n",
      "couple\n",
      "doctor\n",
      "pharmaceutical\n",
      "chance\n",
      "refill\n",
      "rely\n",
      "shake\n",
      "profile\n",
      "prescribe\n",
      "chronic\n",
      "flow\n",
      "organize\n",
      "minutes\n",
      "steady\n",
      "commonly\n",
      "Topic cluster:  18\n",
      "pain\n",
      "cause\n",
      "main\n",
      "city\n",
      "effect\n",
      "women\n",
      "body\n",
      "publish\n",
      "children\n",
      "color\n",
      "blood\n",
      "cream\n",
      "feel\n",
      "symptoms\n",
      "virus\n",
      "Topic cluster:  19\n",
      "really\n",
      "christmas\n",
      "love\n",
      "things\n",
      "talk\n",
      "still\n",
      "kind\n",
      "good\n",
      "thing\n",
      "something\n",
      "little\n",
      "figure\n",
      "pretty\n",
      "seem\n",
      "probably\n",
      "Topic cluster:  20\n",
      "texas\n",
      "shoot\n",
      "season\n",
      "medicare\n",
      "senior\n",
      "protect\n",
      "communities\n",
      "seniors\n",
      "reach\n",
      "everyone\n",
      "month\n",
      "live\n",
      "spread\n",
      "participate\n",
      "medicaid\n",
      "Topic cluster:  21\n",
      "customer\n",
      "cash\n",
      "manager\n",
      "assign\n",
      "ensure\n",
      "maintain\n",
      "distinctive\n",
      "delightful\n",
      "team\n",
      "complete\n",
      "photo\n",
      "request\n",
      "basic\n",
      "task\n",
      "efficient\n",
      "Topic cluster:  22\n",
      "police\n",
      "officer\n",
      "block\n",
      "preview\n",
      "suspect\n",
      "park\n",
      "city\n",
      "steal\n",
      "street\n",
      "shoot\n",
      "vehicle\n",
      "arrest\n",
      "avenue\n",
      "weekly\n",
      "woman\n",
      "Topic cluster:  23\n",
      "pharmacist\n",
      "customer\n",
      "assist\n",
      "manager\n",
      "maintain\n",
      "patient\n",
      "accordance\n",
      "dispense\n",
      "enhance\n",
      "train\n",
      "ensure\n",
      "practice\n",
      "ptcb\n",
      "good\n",
      "healthcare\n",
      "Topic cluster:  24\n",
      "house\n",
      "charge\n",
      "hold\n",
      "reveal\n",
      "court\n",
      "district\n",
      "without\n",
      "series\n",
      "hear\n",
      "march\n",
      "october\n",
      "kick\n",
      "official\n",
      "case\n",
      "trial\n",
      "Topic cluster:  25\n",
      "update\n",
      "image\n",
      "comment\n",
      "label\n",
      "email\n",
      "view\n",
      "google\n",
      "alert\n",
      "longer\n",
      "fee\n",
      "reader\n",
      "subscribe\n",
      "address\n",
      "cold\n",
      "display\n",
      "Topic cluster:  26\n",
      "trump\n",
      "covid\n",
      "greet\n",
      "government\n",
      "trials\n",
      "brown\n",
      "administration\n",
      "speed\n",
      "cannot\n",
      "article\n",
      "die\n",
      "andrew\n",
      "federal\n",
      "president\n",
      "york\n",
      "Topic cluster:  27\n",
      "florida\n",
      "desantis\n",
      "hospitals\n",
      "case\n",
      "file\n",
      "hospital\n",
      "deaths\n",
      "video\n",
      "show\n",
      "thursday\n",
      "hospitalizations\n",
      "record\n",
      "fear\n",
      "point\n",
      "break\n",
      "Topic cluster:  28\n",
      "benefit\n",
      "management\n",
      "global\n",
      "research\n",
      "period\n",
      "aspects\n",
      "analysis\n",
      "international\n",
      "growth\n",
      "regional\n",
      "factor\n",
      "study\n",
      "upon\n",
      "advantage\n",
      "facilitate\n",
      "Topic cluster:  29\n",
      "boot\n",
      "alliance\n",
      "rat\n",
      "billion\n",
      "quarter\n",
      "earn\n",
      "estimate\n",
      "investment\n",
      "sales\n",
      "firm\n",
      "own\n",
      "investors\n",
      "value\n",
      "growth\n",
      "profit\n"
     ]
    }
   ],
   "source": [
    "wordNumbers = 30  \n",
    "topicIndices = sc.parallelize(lda_model.describeTopics(maxTermsPerTopic = wordNumbers))\n",
    "topic_list = topicIndices.toDF().select('*').collect()\n",
    "for i in range(0,num_topics):\n",
    "    print(\"Topic cluster: \", i)\n",
    "    for index in topic_list[i]._1:\n",
    "        print(cvmodel.vocabulary[index])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [],
   "source": [
    "topics = lda_model.topicsMatrix()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TOPIC #: 0\n",
      "perfect 0.0241449598115194\n",
      "smart 0.020915844126689457\n",
      "sound 0.014821886763801194\n",
      "feature 0.01261886162020271\n",
      "little 0.011198064111577357\n",
      "design 0.011191777249316038\n",
      "easy 0.010642277993106176\n",
      "even 0.010534320337112801\n",
      "black 0.010265364944281308\n",
      "four 0.00912368835065485\n",
      "\n",
      "TOPIC #: 1\n",
      "worth 0.03332416066199638\n",
      "pressure 0.03314305541974374\n",
      "retailer 0.032946887316025505\n",
      "marketplace 0.030081325608673756\n",
      "compete 0.02640187695830445\n",
      "promise 0.0247870725743294\n",
      "recent 0.024766971648951072\n",
      "financial 0.024720287896673097\n",
      "particularly 0.024494487433101987\n",
      "hundreds 0.0242180556737333\n",
      "\n",
      "TOPIC #: 2\n",
      "ability 0.0252130198988141\n",
      "add 0.02513667516576338\n",
      "license 0.0228628985806478\n",
      "drugstore 0.020338705737759453\n",
      "appear 0.01984590350375856\n",
      "multiple 0.017578838942889176\n",
      "manage 0.015809176359285557\n",
      "substantial 0.015263128510700635\n",
      "professionals 0.014937558676600852\n",
      "broad 0.014728988362274612\n",
      "\n",
      "TOPIC #: 3\n",
      "growth 0.026714090517647126\n",
      "sales 0.024319806114456916\n",
      "increase 0.018510310474394893\n",
      "quarter 0.015666356036752777\n",
      "billion 0.013979984181520825\n",
      "global 0.013411022022391018\n",
      "analysis 0.011423212508051018\n",
      "estimate 0.01002789861821457\n",
      "strong 0.009937459486270702\n",
      "third 0.00951999949294084\n",
      "\n",
      "TOPIC #: 4\n",
      "users 0.03011182626648794\n",
      "pharmacists 0.021742486693061377\n",
      "healthcare 0.021461909371993333\n",
      "answer 0.020537334154981903\n",
      "food 0.01505804227660716\n",
      "live 0.014347576248355837\n",
      "roll 0.0138346383035546\n",
      "choose 0.013739621180222105\n",
      "enable 0.012742294435260489\n",
      "question 0.012592004034381522\n",
      "\n",
      "TOPIC #: 5\n",
      "think 0.022600882936154993\n",
      "things 0.022126863805547178\n",
      "really 0.021604446951980386\n",
      "know 0.021112521831353707\n",
      "want 0.01970160421140663\n",
      "kind 0.01962121276490945\n",
      "right 0.015540400697914404\n",
      "much 0.012676832786525176\n",
      "talk 0.012429895639511588\n",
      "actually 0.01241235219805149\n",
      "\n",
      "TOPIC #: 6\n",
      "last 0.09318142867940987\n",
      "fiscal 0.07967910237146832\n",
      "grow 0.07255159473979346\n",
      "year 0.0686933519354148\n",
      "three 0.057978331038349165\n",
      "compare 0.050193553704433104\n",
      "rat 0.04430223713511227\n",
      "income 0.042160756002647126\n",
      "revenue 0.03178769129006059\n",
      "average 0.03146387039736945\n",
      "\n",
      "TOPIC #: 7\n",
      "become 0.01586960323770917\n",
      "threat 0.01427485222318241\n",
      "high 0.011625718694130477\n",
      "insurers 0.01154147390980879\n",
      "competitive 0.011005539410514978\n",
      "drugstores 0.010872425012504171\n",
      "economist 0.010725482020016882\n",
      "analysts 0.01043680287559638\n",
      "evolve 0.010227627958556532\n",
      "push 0.00934217301463771\n",
      "\n",
      "TOPIC #: 8\n",
      "index 0.02165709353938876\n",
      "fell 0.02136040639910537\n",
      "drop 0.01843782679266738\n",
      "record 0.018226828533894252\n",
      "rise 0.01652165052127205\n",
      "lose 0.016097209839945614\n",
      "jones 0.01586317510765923\n",
      "back 0.015142517093179708\n",
      "month 0.014359990209916828\n",
      "close 0.013988964757950079\n",
      "\n",
      "TOPIC #: 9\n",
      "drone 0.020814415728464587\n",
      "loyalty 0.01787069140908086\n",
      "accord 0.017511231038581973\n",
      "competition 0.016070333714123464\n",
      "corp 0.016065893204281038\n",
      "kroger 0.014479088870539869\n",
      "boot 0.013885466356126563\n",
      "bring 0.013663419586139022\n",
      "club 0.013215883669802845\n",
      "disrupt 0.01312446078393603\n",
      "\n",
      "TOPIC #: 10\n",
      "earn 0.061661527782724296\n",
      "slide 0.05994628555552278\n",
      "gift 0.05513495077934307\n",
      "affiliate 0.044010766229181326\n",
      "commission 0.04232366410813228\n",
      "recommend 0.042172701266428074\n",
      "link 0.04124428964415853\n",
      "something 0.03761529776293471\n",
      "point 0.023619179807181905\n",
      "microsoft 0.022387047152592408\n",
      "\n",
      "TOPIC #: 11\n",
      "data 0.06173387957239659\n",
      "privacy 0.0254959861529335\n",
      "information 0.02345541883880861\n",
      "trust 0.022857931678361976\n",
      "healthcare 0.022625127225001207\n",
      "insider 0.022419812354160233\n",
      "use 0.019631958342382575\n",
      "mean 0.01458037950838602\n",
      "concern 0.012599618489488425\n",
      "maintain 0.011933313189438499\n",
      "\n",
      "TOPIC #: 12\n",
      "friday 0.027618254402839645\n",
      "black 0.024575690311925604\n",
      "local 0.023625497104748545\n",
      "holiday 0.022164452073791908\n",
      "product 0.021706834173382275\n",
      "products 0.019727805331257908\n",
      "find 0.01957603396428484\n",
      "click 0.016040200274833452\n",
      "check 0.015664623300995623\n",
      "best 0.015425334400026903\n",
      "\n",
      "TOPIC #: 13\n",
      "prescribe 0.024393783339769375\n",
      "couple 0.024002194037676738\n",
      "shake 0.02319048259740746\n",
      "insulin 0.022430954043775434\n",
      "file 0.022403765804650123\n",
      "commonly 0.02209216107731944\n",
      "profile 0.021164975805837354\n",
      "stay 0.020457461054739053\n",
      "steady 0.018738077561584722\n",
      "chance 0.01855012862161634\n",
      "\n",
      "TOPIC #: 14\n",
      "november 0.066059232967159\n",
      "video 0.044673681068889304\n",
      "publish 0.03678270711105518\n",
      "receive 0.033015484993434895\n",
      "view 0.032354068803281996\n",
      "email 0.026369033986052948\n",
      "article 0.025851149100840753\n",
      "chief 0.022306891282504192\n",
      "update 0.021744286647423037\n",
      "officer 0.02103652144929195\n",
      "\n",
      "TOPIC #: 15\n",
      "digital 0.023441834382304245\n",
      "transparency 0.022865461529209225\n",
      "integrate 0.019423242958791383\n",
      "unveil 0.016625146777266\n",
      "consumers 0.01657071150810891\n",
      "announcement 0.016457443318381445\n",
      "section 0.014457069307988523\n",
      "grocery 0.013671497092787636\n",
      "boot 0.013628879111908165\n",
      "giant 0.013614257066461235\n",
      "\n",
      "TOPIC #: 16\n",
      "customer 0.024999195041172807\n",
      "mail 0.016843987534516314\n",
      "information 0.01619714157527958\n",
      "schedule 0.015461398804771558\n",
      "experience 0.01505828797966982\n",
      "patients 0.014897796770478013\n",
      "percent 0.013965915453837173\n",
      "account 0.013864631018844036\n",
      "transfer 0.012969314636630872\n",
      "build 0.012032109971832133\n",
      "\n",
      "TOPIC #: 17\n",
      "healthcare 0.019413135657339625\n",
      "digital 0.018923581941011677\n",
      "technology 0.01637766281699421\n",
      "acquire 0.015662622332174896\n",
      "capital 0.013942569535005488\n",
      "investors 0.013245760111631472\n",
      "partner 0.01292374449584141\n",
      "platform 0.012327668299791202\n",
      "future 0.012284355317154643\n",
      "invest 0.011796398375970364\n",
      "\n",
      "TOPIC #: 18\n",
      "vice 0.024125262615436557\n",
      "understand 0.02266216615364481\n",
      "handle 0.019445849863204447\n",
      "lowest 0.018800616828116568\n",
      "available 0.01817961156657905\n",
      "scenes 0.017161531438777338\n",
      "complications 0.017133320301539755\n",
      "seamlessly 0.01684462484231195\n",
      "president 0.01641502489974869\n",
      "anyone 0.016376331219417624\n",
      "\n",
      "TOPIC #: 19\n",
      "acrx 0.15084238721639476\n",
      "download 0.07302345843925195\n",
      "music 0.061445476414750004\n",
      "donate 0.06087303870230166\n",
      "baby 0.03224606898643852\n",
      "pet 0.03185582076827939\n",
      "request 0.03158035783891166\n",
      "entertainment 0.031005265226304316\n",
      "romance 0.030996072351250396\n",
      "mask 0.030960002561296357\n",
      "\n",
      "TOPIC #: 20\n",
      "image 0.033287989270718625\n",
      "apple 0.029565028298878835\n",
      "google 0.02626266683449158\n",
      "cloud 0.02199049583750437\n",
      "tech 0.0208865652561289\n",
      "series 0.01938664936352131\n",
      "twitter 0.018268826557548606\n",
      "raise 0.017970530929208466\n",
      "international 0.017298818215560542\n",
      "review 0.014809831585854317\n",
      "\n",
      "TOPIC #: 21\n",
      "distribution 0.03190232073941232\n",
      "mckesson 0.030825615932173377\n",
      "pharma 0.029434849582707538\n",
      "distribute 0.02562458682390145\n",
      "mention 0.02238728461658413\n",
      "pharmaceuticals 0.01891335124704938\n",
      "pharmacist 0.014097390471457671\n",
      "lower 0.013035325962639576\n",
      "legal 0.012871648519132296\n",
      "cannot 0.01218031589135837\n",
      "\n",
      "TOPIC #: 22\n",
      "state 0.06828292787785323\n",
      "cost 0.04095544450823701\n",
      "best 0.03165725588743034\n",
      "access 0.030176200416461654\n",
      "rank 0.026682985100041773\n",
      "patient 0.023391602625172796\n",
      "base 0.022079052816738998\n",
      "number 0.019088992903493234\n",
      "federal 0.01660983418661265\n",
      "factor 0.01626191093619035\n",
      "\n",
      "TOPIC #: 23\n",
      "internet 0.021610717131429036\n",
      "house 0.018877873965405457\n",
      "media 0.017211834100594393\n",
      "real 0.016444092588423116\n",
      "book 0.013312519005637177\n",
      "post 0.012972182298505866\n",
      "facebook 0.011867860844302872\n",
      "claim 0.011199994511759015\n",
      "search 0.010719054569108016\n",
      "author 0.01030080705013643\n",
      "\n",
      "TOPIC #: 24\n",
      "hours 0.018851858755536396\n",
      "canadian 0.016260131137414195\n",
      "trump 0.015448585624036393\n",
      "government 0.015150239300459412\n",
      "biden 0.013743795227693078\n",
      "public 0.011491800852248676\n",
      "case 0.010151341880430325\n",
      "test 0.009775079438541908\n",
      "federal 0.008205824401282365\n",
      "support 0.008124974012769822\n",
      "\n",
      "TOPIC #: 25\n",
      "goodrx 0.06540665025961263\n",
      "amzn 0.05195798283920887\n",
      "end 0.024122754367176334\n",
      "months 0.02330433212675953\n",
      "alert 0.022761340129322023\n",
      "billion 0.02149744131380159\n",
      "loss 0.01699353370610587\n",
      "target 0.014985733700721877\n",
      "fee 0.013549453536894403\n",
      "healthcare 0.013533196948810102\n",
      "\n",
      "TOPIC #: 26\n",
      "cent 0.020445368483845226\n",
      "team 0.015037954583652384\n",
      "local 0.014490476262934092\n",
      "community 0.014111382269625092\n",
      "case 0.012792423694861959\n",
      "action 0.011068524078156582\n",
      "hire 0.00934003680533278\n",
      "university 0.008937887339958877\n",
      "workers 0.008910256618033362\n",
      "center 0.008513826570483852\n",
      "\n",
      "TOPIC #: 27\n",
      "apollo 0.06705339090233353\n",
      "india 0.047556549237669846\n",
      "stake 0.04576550039389597\n",
      "investment 0.04496034005343945\n",
      "group 0.03942868500247383\n",
      "majority 0.034204258184653266\n",
      "reliance 0.03127697374688943\n",
      "indian 0.026927913303641245\n",
      "tata 0.023504679042892794\n",
      "competition 0.022209767518079463\n",
      "\n",
      "TOPIC #: 28\n",
      "bezos 0.0434670988507287\n",
      "alexa 0.029311089246491537\n",
      "jeff 0.02695427719205341\n",
      "simple 0.015319046924997888\n",
      "supply 0.014028480546663398\n",
      "explain 0.013732949617023307\n",
      "write 0.01303371433094663\n",
      "happy 0.012476542224647365\n",
      "idea 0.012123991913797136\n",
      "problem 0.010638020824534456\n",
      "\n",
      "TOPIC #: 29\n",
      "vaccine 0.08434847186313121\n",
      "vaccines 0.039965191039176194\n",
      "coronavirus 0.03276877805589024\n",
      "pfizer 0.02757669650411852\n",
      "moderna 0.024620423537488507\n",
      "story 0.021896805601217095\n",
      "effective 0.019945173592949613\n",
      "healthcare 0.018137892477649235\n",
      "insider 0.01806809041909378\n",
      "full 0.01761684015864872\n",
      "\n"
     ]
    }
   ],
   "source": [
    "topics = lda_model.describeTopics(maxTermsPerTopic = 10)\n",
    "for x, topic in enumerate(topics):\n",
    "    print('TOPIC #: ' + str(x))\n",
    "    words = topic[0]\n",
    "    weights = topic[1]\n",
    "    for n in range(len(words)):\n",
    "        print(cvmodel.vocabulary[words[n]] + ' ' + str(weights[n]))\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Topic #0:\n",
      "online pharmacy |   | amazon launch | launch online | launch online pharmacy | amazon launch online | amazon launch online pharmacy |  amazon | pharmacy service |    | online pharmacy  | pharmacy  | online pharmacy service | launch online pharmacy  | launch online pharmacy service | amazon enter |  amazon launch | health care | launch online pharmacy consumers | pharmacy consumers | online pharmacy consumers | new online |  amazon launch online | new online pharmacy | amazon announce | push pharmacy |  business | service  | prescription drug | news \n",
      "Topic #1:\n",
      "amazon  |  amazon | amazon pharmacy | black friday | pharmacy launch |  cvs |  pharmacy | amazon pharmacy launch |  walgreens | walgreens  |  amazon  |  amazon pharmacy | amazon  pharmacy | deliver prescription | pharmacy news |  deliver | launch  |  walgreens  | cvs walgreens | pharmacy stock | amazon  new | cvs  | deliver prescription medications |  new | pharmacy launch  |  deliver prescription | covid19 vaccine | prescription medications | amazon pharmacy launch  | business \n",
      "Topic #2:\n",
      "online pharmacy | open online | amazon open | open online pharmacy | amazon open online | amazon open online pharmacy | pharmacy  | online pharmacy  | shake industry |  shake |  shake industry | open online pharmacy  | pharmacy  shake | online pharmacy  shake | pharmacy  shake industry | industry  |  shake industry  | shake industry  | news  |  news |  business | amazon start | business  | pharmacy chain | pharmacy deliver | online pharmacy prescription | open online pharmacy prescription | pharmacy prescription |  amazon | prescription delivery \n",
      "Topic #3:\n",
      "amazon   | prescriptions prime | prime members | prescriptions prime members | drug store | store  | amazon drug |  ship | drug store  |  ship prescriptions | ship prescriptions | store  ship | store  ship prescriptions | amazon drug store  | ship prescriptions prime | drug store  ship | amazon drug store |  ship prescriptions prime | ship prescriptions prime members | amazon   new |   new |  news | pharmacy deliver | amazon pharmacy deliver | prime members  | members  | news  |    |   leap | new pharmacy\n",
      "Topic #4:\n",
      "wall street | 2020  | new partnership |  new | new partnership bezos earth |  new partnership bezos |  new partnership | announce wwf | earth fund | bezos earth fund | partnership bezos | partnership bezos earth | wwf  new partnership | announce wwf  | bezos earth | wwf  | wwf  new | announce wwf  new | partnership bezos earth fund | new partnership bezos | amazon prime | maxine wilson receive prestigious | regional award | operate officer maxine wilson | wilson receive prestigious regional | receive prestigious regional | operate officer | officer maxine wilson receive | officer maxine wilson | officer maxine\n",
      "Topic #5:\n",
      "amazon pharmacy | pharmacy  | amazon launch | amazon pharmacy  | launch amazon | launch amazon pharmacy | amazon launch amazon pharmacy | amazon launch amazon | delivery service | launch amazon pharmacy  | prescription medications | medicine delivery | prescription medicine | service prescription |  delivery | jeff bezos | pharmacy  delivery | delivery service prescription |  delivery service prescription | service prescription medications |  delivery service | amazon pharmacy  delivery | pharmacy  delivery service | delivery service prescription medications | launch new | amazon launch new |  p | pharmacy prescription | service  | prescription drug\n",
      "Topic #6:\n",
      "prime members | pharmacy business | prescription delivery | launch pharmacy | amazon launch | delivery prime members | delivery prime | amazon launch pharmacy | delivery  | free delivery | online prescription |  free | free delivery prime members | free delivery prime | google alert | alert  | google alert  | pharmacy offer | november 2020 | pharmacy prescription | prescription delivery  | open online pharmacy prescription | online pharmacy prescription | order prescription | home delivery |  include | launch pharmacy business | walgreens drop |  free delivery |  free delivery prime\n",
      "Topic #7:\n",
      "apollo pharmacy | 100 million |  100 |  100 million | million investment | 100 million investment | sell prescription |  100 million investment | amazon eye | eye potential  100 | eye potential  | potential  100 | potential  100 million | amazon eye potential | eye potential | amazon eye potential  | potential  | apollo pharmacy  | investment india | india  | million investment india | 100 million investment india | amazon want | sell prescription medications | want sell prescription | amazon want sell | want sell prescription medications | amazon want sell prescription | want sell | prescription medications\n",
      "Topic #8:\n",
      " american | american consultants rx | american consultants rx service | american consultants | consultants rx |  american consultants | rx service |  american consultants rx | consultants rx service |  community assistance press |  community assistance | assistance press | community assistance press |  community | community assistance | pharmacy new | pharmacy new contest | online pharmacy new | launch online pharmacy new | new contest | online pharmacy new contest | drug retail | amazon launch | new contest drug | pharmacy new contest drug | contest drug | amazon launch online pharmacy | amazon launch online | launch online pharmacy | launch online\n",
      "Topic #9:\n",
      " new | new pharmacy | pharmacies  |  2020 | new macs |  review | daily crunch | daily crunch  | daily crunch  review | crunch  review | crunch  | review apple | crunch  review apple |  review apple | animal rescue | joan lee boys |  girls club | club culinary | girls club culinary program | joan lee boys  | robert joan lee | lee boys | girls club | girls club culinary | lee boys  girls | lee boys  | joan lee | culinary program | boys  girls club |  girls club culinary\n"
     ]
    }
   ],
   "source": [
    "n_top_words = 30\n",
    "tf_feature_names = tf_vectorizer.get_feature_names()\n",
    "topics = dict()\n",
    "for topic_idx, topic in enumerate(lda_tf.components_):\n",
    "    topics[topic_idx] = [tf_feature_names[i] for i in topic.argsort()[:-n_top_words - 1:-1]]\n",
    "    print(\"Topic #%d:\" % topic_idx)\n",
    "    print(\" | \".join([tf_feature_names[i] for i in topic.argsort()[:-n_top_words - 1:-1]]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.css\">\n",
       "\n",
       "\n",
       "<div id=\"ldavis_el6259698967461125897320748\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "\n",
       "var ldavis_el6259698967461125897320748_data = {\"mdsDat\": {\"x\": [-0.33703401960359464, 0.11698077860741093, -0.02801348184717448, 0.17665927878994883, -0.19932823289122092, 0.05866196734901493, 0.10415795329230552, 0.03269436381903868, 0.01424351351156543, 0.06097787897270554], \"y\": [-0.1343793306811511, -0.067703196093416, 0.3184154751778007, -0.1982350870795519, -0.044490519820685304, 0.015220436454715037, -0.03184221483846758, 0.035322645671092265, 0.1625477442765674, -0.05485595306690362], \"topics\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"cluster\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], \"Freq\": [18.094153317984308, 12.733679089001098, 12.658354973097467, 11.256878848555974, 10.349324333604953, 8.642533248570777, 7.5468187149107555, 7.279567187058124, 5.73911149769724, 5.699578789519306]}, \"tinfo\": {\"Term\": [\" amazon\", \"launch online\", \"amazon \", \"launch online pharmacy\", \"amazon launch online\", \"amazon launch online pharmacy\", \" \", \"amazon open\", \"open online\", \"open online pharmacy\", \"amazon open online\", \"amazon open online pharmacy\", \"online pharmacy \", \"assistance press\", \"community assistance\", \"community assistance press\", \" community assistance press\", \" community assistance\", \" community\", \" american\", \"consultants rx\", \"american consultants\", \"american consultants rx\", \" american consultants\", \" american consultants rx\", \"american consultants rx service\", \"rx service\", \"consultants rx service\", \"amazon pharmacy \", \" pharmacy\", \"amazon open\", \"open online\", \"open online pharmacy\", \"amazon open online\", \"amazon open online pharmacy\", \"open online pharmacy \", \"shake industry\", \" shake\", \" shake industry\", \"pharmacy  shake\", \"online pharmacy  shake\", \"pharmacy  shake industry\", \"industry \", \"launch amazon\", \"launch amazon pharmacy\", \"shake industry \", \" shake industry \", \"amazon launch amazon\", \"amazon launch amazon pharmacy\", \"pharmacy launch\", \"amazon pharmacy launch\", \"prescription medications\", \"launch amazon pharmacy \", \"amazon want\", \" covid19\", \"service prescription\", \" delivery\", \"amazon shake\", \"pharmacy industry\", \"amazon pharmacy prescription\", \"online pharmacy \", \"pharmacy prescription\", \"deliver prescription\", \" business\", \"amazon pharmacy \", \"news \", \"wall street\", \"  new\", \"pharmacies \", \"amazon   new\", \" p\", \" ship\", \"amazon drug\", \"gon na undercut\", \"adamtheredbeard \", \"gwynndolin   gon\", \"adamtheredbeard  gwynndolin\", \"  gon\", \"na undercut\", \" gwynndolin \", \" gon na\", \" adamtheredbeard \", \"gwynndolin  \", \" adamtheredbeard\", \" gwynndolin  \", \" gwynndolin\", \"adamtheredbeard  gwynndolin \", \" adamtheredbeard  gwynndolin\", \"gwynndolin \", \"gon na\", \" gon na undercut\", \"  gon na\", \" gon\", \"prescriptions prime\", \"ship prescriptions\", \" ship prescriptions\", \"amazon  \", \"store \", \" \", \"prime members\", \"apollo pharmacy\", \"100 million\", \" 100\", \" 100 million\", \"100 million investment\", \"million investment\", \" 100 million investment\", \"amazon eye\", \"eye potential \", \"potential \", \"potential  100\", \"eye potential\", \"eye potential  100\", \"amazon eye potential \", \"amazon eye potential\", \"potential  100 million\", \"investment india\", \"apollo pharmacy \", \"million investment india\", \"100 million investment india\", \"pharmacy chain\", \" report\", \"investment apollo\", \"investment apollo pharmacy\", \"india  \", \"shake pharmacy\", \"  apollo pharmacy\", \"  apollo\", \"india   apollo\", \"india   apollo pharmacy\", \"india \", \" american\", \"consultants rx\", \"american consultants rx\", \"american consultants\", \" american consultants\", \"american consultants rx service\", \" american consultants rx\", \"rx service\", \"consultants rx service\", \"  \", \"new pharmacy\", \"new online\", \"amazon  new\", \"amzn \", \" amzn\", \" amzn \", \"new online pharmacy\", \"news headline press\", \" news headline\", \"news headline\", \" news headline press\", \"headline press\", \" new pharmacy\", \"know amazon\", \"amazoncom \", \"new pharmacy service\", \"amazon  new pharmacy\", \"amazon  amzn\", \" new\", \" news\", \" \", \"amazon \", \"launch online\", \"launch online pharmacy\", \"amazon launch online\", \"amazon launch online pharmacy\", \"launch online pharmacy \", \"black friday\", \"medicine \", \"home delivery\", \" amazon launch online\", \"online pharmacy service\", \"amazon unveil\", \"online pharmacy new\", \"launch online pharmacy new\", \"online pharmacy new contest\", \"new contest\", \"pharmacy new\", \"pharmacy new contest\", \"drug retail\", \"pharmacy service \", \"contest drug\", \"pharmacy new contest drug\", \"new contest drug\", \"launch online pharmacy service\", \" include\", \"new contest drug retail\", \"contest drug retail\", \"pharmacy consumers\", \"online pharmacy consumers\", \"launch online pharmacy consumers\", \"healthcare industry\", \"pharmacy service\", \"online pharmacy \", \"service \", \"drug retailers\", \"prime members\", \"prescription drug\", \" walgreens\", \"walgreens \", \"sell prescription\", \"cvs \", \"amazon prime\", \"delivery prime members\", \"delivery prime\", \"sell prescription drug\", \"free delivery\", \" free\", \" walgreens \", \"insulin \", \" inhalers\", \"insulin  inhalers\", \"cvs  walgreens\", \"drug \", \"free delivery prime members\", \"free delivery prime\", \"sell amazon\", \"walgreens  cvs\", \"prescription drug \", \" inhalers sell\", \"insulin  inhalers sell\", \"inhalers sell\", \" inhalers sell amazon\", \"inhalers sell amazon\", \"amazon start\", \"goodrx \", \"inhalers sell amazon \", \"online prescription\", \" cvs\", \"prime members\", \"amazon \", \" amazon\", \" amazon pharmacy\", \" amazon \", \"business \", \" amazon launch\", \"jeff bezos\", \"launch \", \"pharmacy store\", \"pharmacy business \", \" stock\", \" amazon pharmacy \", \"amazon online\", \"bezos \", \"jeff bezos \", \" online\", \"  amazon\", \"jump pharmacy\", \"online pharmacy store\", \"today \", \"stock market\", \"healthcare \", \"scott galloway\", \"amazon pharmacy  online\", \"pharmacy  online\", \"amazon jump pharmacy\", \"amazon jump\", \"amazon online pharmacy\", \"prescription medication\", \"gift card\", \"https \", \"amazon pharmacy \", \" \", \"week \", \"amazon \", \"pharmacy business\", \"fear amazon\", \"community assistance\", \"assistance press\", \" community assistance press\", \"community assistance press\", \" community assistance\", \" community\", \"2020 \", \" 2020\", \"pharmacy offer\", \" november\", \"offer \", \"  community\", \"  community assistance\", \" 2020 \", \"pharmacy offer \", \"november 2020\", \" prescription\", \"amazon launch pharmacy offer\", \"launch pharmacy offer\", \"special olympics\", \"pharmacy  prescription\", \"pharmacy market\", \"amazon launch pharmacy\", \"prescription delivery\", \" 5\", \"launch pharmacy\", \"market \", \"work \", \"report \", \"drug retailers\", \" \", \" 2\", \"2 spend\", \" 2 spend\", \"amazon enter\", \"covid19 vaccine\", \"2 spend press\", \"spend press\", \" 2 spend press\", \" amazon open\", \"push pharmacy\", \"walgreens drop\", \"launch pharmacy business\", \"amazon enter pharmacy\", \"enter pharmacy\", \"amazon make\", \"store stock\", \"lead drug store\", \"lower amazon launch\", \"lead drug store stock\", \"stock lower amazon launch\", \" lead drug store\", \"drug store stock\", \"lower amazon\", \"stock lower\", \" lead\", \"lead drug\", \" lead drug\", \"store stock lower\", \"drug store stock lower\", \"store stock lower amazon\", \"pharmacy business\", \"vaccine \", \"drug store\", \"launch pharmacy\", \" pharmacy\", \"amazon  pharmacy\", \"health care\", \"amazon announce\", \"launch new\", \"amazon launch new\", \"google alert \", \"alert \", \"google alert\", \"medicine delivery service\", \"plunge amazon\", \"new macs\", \" review\", \" big\", \"new medicine delivery service\", \"new medicine delivery\", \"new medicine\", \"delivery service \", \"medicine delivery service \", \" charles myrick\", \"charles myrick news\", \" charles myrick news\", \" charles\", \"myrick news\", \"charles myrick\", \"crunch  review\", \"daily crunch  review\", \"crunch \", \"daily crunch\", \"daily crunch \", \"amazon \", \"delivery service\", \"pandemic \", \"pharmacy news\", \"service \", \"medicine delivery\", \"news \"], \"Freq\": [88.0, 67.0, 84.0, 64.0, 62.0, 62.0, 111.0, 65.0, 64.0, 63.0, 60.0, 60.0, 72.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 37.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 36.0, 23.0, 64.27694750410478, 63.42439264209874, 62.53542827806641, 59.85619490618109, 59.856194906180505, 41.11698424640993, 40.27714519511488, 40.202375437895874, 37.59766911810805, 36.67595384777558, 36.67595384777595, 35.79104296717936, 33.856821381859774, 29.586450635924614, 28.689324633255254, 27.683856981984782, 27.68385698198496, 18.905706879819803, 18.905706879819707, 16.989267393513703, 14.289409937938322, 13.522742158210754, 11.760875612074768, 5.4969425998188655, 5.472239088698863, 5.410086597810569, 4.599732040269423, 4.554778800579681, 4.534202860775047, 4.526148629895135, 49.665709537230526, 7.04370710688002, 6.340960514906684, 7.254261502985446, 12.44595694120168, 5.59482187385346, 14.346248092970667, 14.217700989192593, 13.496788416185394, 12.441613846513029, 9.884178074274915, 8.90588233006737, 8.88138952448643, 8.123975010139862, 8.123975010139775, 8.123975010139631, 8.123975010139784, 8.123975010139812, 8.123975010139642, 8.123975010139821, 8.123975010139697, 8.12397501013965, 8.123975010139743, 8.123975010139725, 8.123975010139675, 8.12397501013966, 8.123975010139576, 8.1239750101398, 8.123975010140132, 8.123975010139878, 8.123975010140017, 8.123975010139795, 8.123975010139931, 8.061850367218547, 7.9994833602529365, 7.999483360252867, 32.58433064871078, 9.63704757470544, 19.197323666451677, 8.130702456030788, 28.861123687492395, 28.793821318413283, 25.87224579272371, 23.965427521875334, 22.062697499806532, 22.06269749980664, 19.18070074076135, 17.252113306506516, 14.45020655144679, 14.450206551446964, 14.450206551447014, 14.450206551446868, 14.45020655144724, 14.450206551447259, 14.45020655144699, 14.450206551447046, 13.57136060454562, 13.465936305827363, 11.611633754601847, 11.6116337546017, 9.677387545856881, 9.664300213735046, 9.660922121312188, 9.660922121311913, 8.698949885726488, 7.735532575413692, 7.71912018160996, 7.71912018161001, 7.719120181609948, 7.719120181610208, 11.679355326259271, 36.6513426109007, 34.90252363073952, 34.90252363073952, 34.90252363073957, 34.90252363073945, 34.902523630739424, 34.90252363073958, 34.90252363073939, 34.902523630739346, 21.509764696306686, 12.200923481794927, 12.165776243981943, 11.315830360650825, 11.306875116795215, 11.3028577968869, 10.428471704708446, 9.634874078009956, 8.711372970435397, 8.711372970435702, 8.711372970435164, 8.71137297043533, 8.711372970435317, 6.200060100722742, 4.471030196091516, 4.455211825459388, 4.435545457928946, 4.431175371170434, 4.3468101761379545, 20.629335035372225, 13.007140744319676, 61.20315557850923, 14.671450769447652, 66.40967679861515, 63.80243692450965, 62.06934307451393, 61.206880678523866, 20.653518080719266, 22.337569446223988, 9.465384372741937, 8.647340395657567, 7.892865072682564, 7.821589733666593, 7.057757095853761, 7.014528466906094, 7.014528466906196, 7.01452846690618, 7.014528466906135, 7.014528466905837, 7.014528466905855, 6.994942795342004, 6.958819259423419, 6.148115230528134, 6.148115230527935, 6.14811523052775, 6.104474077496472, 6.0926361930106525, 5.277734525838728, 5.277734525838481, 5.277703909750703, 5.277703909750866, 5.2777039097509, 5.221060118023207, 14.096515499298793, 21.85935036570758, 6.958748812620717, 5.842387094619611, 5.343682382723122, 22.056305963855976, 16.87160020387616, 15.936934371346595, 14.998029173433004, 11.523296563255464, 10.74742441534111, 10.718927556643182, 10.718927556643147, 10.52899456114432, 9.86637136846451, 8.933083928166967, 8.915893907242227, 8.052401390278153, 8.052401390278227, 8.052401390278034, 8.036371005940344, 7.9162124634215, 7.203917801861364, 7.203917801861238, 7.183870198293331, 7.163712264599049, 7.035466033889531, 6.2827748259258955, 6.282774825925839, 6.282774825925971, 6.2827748259257525, 6.282774825925939, 6.204337925372393, 5.426130361924833, 5.402029962840193, 8.650599754630354, 15.606780505992578, 21.15104457203446, 6.735493204705653, 87.99156954091995, 17.088563773583665, 16.256798039959246, 13.776227968909568, 11.26722524452523, 8.690959326685203, 6.954415111606989, 6.95057738976543, 6.9389209516920225, 6.899445393590906, 6.857126880214173, 6.111294768803141, 6.099553029884421, 6.099553029884388, 6.0765446249295865, 6.0596015221366795, 5.233521477058494, 5.213769395980056, 5.181068057393065, 4.4101514645764315, 4.402069578822491, 4.402065290872957, 4.394455488983373, 4.39445548898145, 4.39055104721259, 4.390551047207316, 4.390267997089562, 4.3829911627866265, 4.374753124845755, 4.370740201302948, 23.244031672714677, 19.463683768630542, 5.177089036341341, 10.062743252452236, 6.719673483006954, 4.616860119106889, 31.941525963850342, 31.94152596385066, 31.94152596385039, 31.94152596385045, 31.941525963850594, 31.941525963850424, 20.191075406851912, 14.376868140947435, 11.929219096956862, 8.503459576426218, 7.65914236884933, 6.752269470137794, 6.75226947013761, 6.724312327747343, 5.9696792380923815, 5.19923177892218, 5.168567130412989, 5.121153764665601, 5.121153764665672, 5.113218669809887, 4.312250019444016, 6.0250845334778225, 11.03028026748404, 9.967438424724072, 3.5101000937762827, 11.030264505181744, 3.351160255352961, 2.6151302702621617, 1.785744524269763, 2.889627552807418, 11.03308361375547, 22.22429830049784, 16.97972921818278, 16.9797292181827, 13.425048391553695, 8.960613483210377, 8.010403052481433, 8.010403052481612, 8.0104030524818, 6.274779401017746, 6.245039763382432, 5.45270306324173, 5.440423008384533, 5.383689112104926, 5.383689112104612, 5.3834609979447094, 4.577694322567094, 4.577694322566308, 4.577694322566497, 4.577694322566577, 4.5776943225667175, 4.57769432256645, 4.577694322566152, 4.577694322566415, 4.577694322566173, 4.577694322566432, 4.577694322566072, 4.577694322566423, 4.577694322566764, 4.5776943225661615, 4.577694322566247, 12.806336773478638, 5.419589917257314, 7.255264483955352, 5.440464851108285, 22.596200513491365, 14.258459184352734, 9.404073190566242, 8.378328560142927, 7.621430648986641, 6.786456104572877, 5.98702603325009, 5.987026033249622, 5.98702603324979, 5.140537586190682, 5.085426147846522, 5.058636591740048, 5.05480255317231, 4.320894702882276, 4.309353828861269, 4.309353828861807, 4.30935382886115, 4.286248879075699, 4.286248879075556, 4.278385683977254, 4.278385683977191, 4.278385683977658, 4.27838568397729, 4.278385683977296, 4.278385683977235, 4.219815647763109, 4.2198156477630775, 4.21981564776299, 4.219815647762665, 4.219815647762494, 48.659784427217495, 12.87645084126094, 5.9052434295314375, 7.847113683647929, 6.751792829543781, 5.9755735907692085, 6.470982976363272], \"Total\": [88.0, 67.0, 84.0, 64.0, 62.0, 62.0, 111.0, 65.0, 64.0, 63.0, 60.0, 60.0, 72.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 37.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 36.0, 23.0, 65.10457785078113, 64.25201888834704, 63.363053382673264, 60.68381983233611, 60.68381983233623, 41.94460486846002, 41.10476455736893, 41.03002719705256, 38.4252885466701, 37.50357329975404, 37.5035732997547, 36.61866244541684, 34.68446499885583, 30.414103172836505, 29.516976430691848, 28.51147610528168, 28.51147610528202, 19.733349121406427, 19.733349121406413, 17.816930975926624, 15.11705885525735, 14.350379162780719, 12.588528714658489, 6.32459958650199, 6.299990453603779, 6.237800328257145, 5.427468868159001, 5.382470220634079, 5.36185016980431, 5.353776372510717, 72.26220040414815, 8.889304130276654, 8.045290614165891, 12.68742847259497, 36.427963109555485, 15.564467921185734, 15.173789452006543, 15.045268764836155, 14.324305724803716, 13.269141341676079, 10.711689992093996, 9.733412334030605, 9.708900531225257, 8.95148583410822, 8.951485834108151, 8.951485834108007, 8.95148583410824, 8.951485834108373, 8.951485834108336, 8.951485834108537, 8.951485834108732, 8.951485834108817, 8.95148583410894, 8.951485834108967, 8.951485834108919, 8.951485834108956, 8.95148583410893, 8.951485834109205, 8.951485834109613, 8.951485834109349, 8.951485834109603, 8.951485834109418, 8.951485834109588, 8.889361389344797, 8.827010418653403, 8.827010418653845, 42.482773589084594, 14.117894761685882, 111.45555718124874, 35.26960675391064, 29.68152560288544, 29.614222759366868, 26.692648290770073, 24.78582901692812, 22.883098720923613, 22.883098720923805, 20.001101969492893, 18.072514541762686, 15.270607799574137, 15.270607799574458, 15.270607799574622, 15.270607799574549, 15.27060779957495, 15.270607799575055, 15.27060779957509, 15.270607799575243, 14.391761774588224, 14.286338577684491, 12.432034924580382, 12.432034924580757, 10.497808075682482, 10.484702164111697, 10.48132559146924, 10.48132559147027, 9.519381421957107, 8.555946501158386, 8.539521351583373, 8.53952135158352, 8.539521351583588, 8.539521351584082, 15.09459773433708, 37.48132424379287, 35.73250526576998, 35.7325052657701, 35.73250526577022, 35.73250526577036, 35.73250526577035, 35.73250526577067, 35.732505265770776, 35.732505265771, 22.339801682386355, 13.030938397179915, 12.995790823268694, 12.145829910556088, 12.136878309926002, 12.132875132066031, 11.258474654419265, 10.464887959446727, 9.541355498040868, 9.541355498041263, 9.541355498040769, 9.541355498041169, 9.541355498041376, 7.0300442550640385, 5.3010535625259605, 5.285210382490849, 5.2655348604307335, 5.261160631927883, 5.1768146613419335, 24.982824775138244, 17.426902741959697, 111.45555718124874, 84.026485670476, 67.24008415180869, 64.63284284954895, 62.899748795326474, 62.03728636572098, 21.48392465174541, 24.175887441043688, 10.295804553568699, 9.477777630705965, 8.72327867802561, 8.65199985054408, 7.8882194121397875, 7.844929930641099, 7.844929930641439, 7.8449299306415785, 7.84492993064177, 7.8449299306415545, 7.844929930641582, 7.825344257099442, 7.789319415514146, 6.978516964190723, 6.978516964191336, 6.978516964191527, 6.934875548061339, 6.923091282112049, 6.108136626875089, 6.108136626875216, 6.108103576930426, 6.108103576931015, 6.108103576931628, 6.051514914810988, 18.17841301608079, 72.26220040414815, 14.453022446821585, 9.47381135815007, 35.26960675391064, 22.88441401895276, 17.69966860155161, 16.765009574040203, 15.826108790110995, 12.351372065066533, 11.575488786005897, 11.546997325479266, 11.546997325479254, 11.357056562946434, 10.694450463492947, 9.761172180007351, 9.743958461641734, 8.880462121564406, 8.880462121564523, 8.880462121565062, 8.864439311839718, 8.74428139987658, 8.0319862893922, 8.031986289392204, 8.01192782241296, 7.991783881684982, 7.863536531478686, 7.110832448701963, 7.110832448702114, 7.110832448702577, 7.110832448702389, 7.110832448702633, 7.032428770655628, 6.254198486411647, 6.230087585591948, 10.645083619273482, 21.25665538440305, 35.26960675391064, 84.026485670476, 88.82283842819571, 17.919791309847582, 17.088052901512906, 14.607531063418822, 12.098513436543339, 9.522183249668904, 7.785673022932258, 7.781841575190956, 7.770220469449784, 7.730684079040125, 7.688353302619395, 6.942538407887711, 6.9307771585834335, 6.930777158583509, 6.907772453263513, 6.8908628511455134, 6.0647725131794745, 6.0450306636667195, 6.01234505609985, 5.241410567057084, 5.233296678013957, 5.2332964477143395, 5.225685240931351, 5.225685240930521, 5.2218047195499775, 5.221804719550375, 5.221520460134446, 5.2142575564675, 5.205976601916038, 5.2019954607431185, 36.427963109555485, 111.45555718124874, 7.684675037287861, 84.026485670476, 28.501726129091622, 9.970523548858386, 32.773794608814676, 32.773794608815216, 32.77379460881516, 32.77379460881534, 32.77379460881554, 32.77379460881609, 21.023409704857677, 15.209145834196647, 12.76154718041051, 9.335742430157685, 8.49141328706752, 7.584537504724112, 7.584537504724025, 7.556595346582143, 6.8019490360646255, 6.031513486813877, 6.000873615721636, 5.953421799549337, 5.953421799550373, 5.945486712746125, 5.144559025856908, 7.740422101079853, 14.556688466705154, 13.733961499383316, 5.241770557150009, 17.20992794116712, 5.989235282225138, 5.16851021696231, 5.394727034717188, 9.47381135815007, 111.45555718124874, 23.052115408213357, 17.8075446920804, 17.807544692081464, 14.252876317910767, 9.788435466302234, 8.83821891991634, 8.838218919917082, 8.838218919917363, 7.102653389998091, 7.072892241921027, 6.280520601960423, 6.268243938828386, 6.211508499016468, 6.211508499016512, 6.211284766199404, 5.405508643235488, 5.405508643234832, 5.405508643235209, 5.40550864323535, 5.405508643235545, 5.4055086432354305, 5.40550864323519, 5.405508643235567, 5.405508643235423, 5.405508643235732, 5.405508643235309, 5.405508643235764, 5.405508643236258, 5.405508643235653, 5.4055086432357715, 28.501726129091622, 7.115674713840633, 16.080224486817453, 17.20992794116712, 23.429118822453475, 15.091353507024593, 10.236964591348327, 9.211254327517821, 8.454334450820806, 7.619339356046777, 6.81990902270555, 6.819909022705337, 6.8199090227061525, 5.973419776847515, 5.91831650760884, 5.8915174020593115, 5.887691907200802, 5.153794765748904, 5.142234429358634, 5.142234429359275, 5.142234429358807, 5.119131422383673, 5.11913142238363, 5.111266284812713, 5.111266284812786, 5.11126628481353, 5.111266284813108, 5.111266284813459, 5.111266284813442, 5.052696505704178, 5.052696505704501, 5.052696505704916, 5.052696505704631, 5.052696505704942, 84.026485670476, 19.603469345736187, 7.592743969164625, 11.07623584644501, 14.453022446821585, 11.085640521463782, 15.564467921185734], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -2.7954, -2.8088, -2.8229, -2.8667, -2.8667, -3.2422, -3.2628, -3.2647, -3.3317, -3.3565, -3.3565, -3.3809, -3.4365, -3.5713, -3.6021, -3.6378, -3.6378, -4.0192, -4.0192, -4.126, -4.2991, -4.3542, -4.4938, -5.2544, -5.2589, -5.2703, -5.4326, -5.4424, -5.447, -5.4487, -3.0533, -5.0065, -5.1116, -4.977, -4.4372, -5.2368, -3.9438, -3.9528, -4.0048, -4.0862, -4.3163, -4.4206, -4.4233, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5125, -4.5201, -4.5279, -4.5279, -3.1234, -4.3417, -3.6525, -4.5116, -3.2388, -3.2412, -3.3482, -3.4247, -3.5075, -3.5075, -3.6474, -3.7534, -3.9306, -3.9306, -3.9306, -3.9306, -3.9306, -3.9306, -3.9306, -3.9306, -3.9934, -4.0012, -4.1493, -4.1493, -4.3316, -4.3329, -4.3333, -4.3333, -4.4381, -4.5555, -4.5576, -4.5576, -4.5576, -4.5576, -4.1435, -2.8826, -2.9314, -2.9314, -2.9314, -2.9314, -2.9314, -2.9314, -2.9314, -2.9314, -3.4155, -3.9825, -3.9854, -4.0578, -4.0586, -4.0589, -4.1395, -4.2186, -4.3194, -4.3194, -4.3194, -4.3194, -4.3194, -4.6594, -4.9864, -4.9899, -4.9944, -4.9953, -5.0146, -3.4573, -3.9185, -2.3698, -3.7981, -2.2041, -2.2442, -2.2717, -2.2857, -3.3721, -3.2937, -4.1523, -4.2427, -4.334, -4.3431, -4.4458, -4.452, -4.452, -4.452, -4.452, -4.452, -4.452, -4.4548, -4.4599, -4.5838, -4.5838, -4.5838, -4.5909, -4.5929, -4.7365, -4.7365, -4.7365, -4.7365, -4.7365, -4.7472, -3.754, -3.3153, -4.4599, -4.6348, -4.724, -3.1261, -3.3941, -3.4511, -3.5118, -3.7754, -3.8451, -3.8477, -3.8477, -3.8656, -3.9306, -4.03, -4.0319, -4.1338, -4.1338, -4.1338, -4.1357, -4.1508, -4.2451, -4.2451, -4.2479, -4.2507, -4.2688, -4.3819, -4.3819, -4.3819, -4.3819, -4.3819, -4.3945, -4.5285, -4.5329, -4.0621, -3.472, -3.168, -4.3123, -1.6069, -3.2457, -3.2956, -3.4612, -3.6623, -3.9219, -4.1448, -4.1453, -4.147, -4.1527, -4.1589, -4.274, -4.2759, -4.2759, -4.2797, -4.2825, -4.4291, -4.4328, -4.4391, -4.6002, -4.6021, -4.6021, -4.6038, -4.6038, -4.6047, -4.6047, -4.6048, -4.6064, -4.6083, -4.6092, -2.9381, -3.1156, -4.4399, -3.7753, -4.1791, -4.5544, -2.5842, -2.5842, -2.5842, -2.5842, -2.5842, -2.5842, -3.0429, -3.3825, -3.5691, -3.9076, -4.0122, -4.1382, -4.1382, -4.1424, -4.2614, -4.3996, -4.4055, -4.4147, -4.4147, -4.4163, -4.5866, -4.2522, -3.6475, -3.7488, -4.7925, -3.6475, -4.8388, -5.0868, -5.4683, -4.987, -3.6472, -2.7091, -2.9783, -2.9783, -3.2132, -3.6175, -3.7296, -3.7296, -3.7296, -3.9738, -3.9785, -4.1142, -4.1165, -4.127, -4.127, -4.127, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -4.2891, -3.2604, -4.1203, -3.8286, -4.1165, -2.6856, -3.1461, -3.5623, -3.6778, -3.7725, -3.8885, -4.0138, -4.0138, -4.0138, -4.1663, -4.177, -4.1823, -4.1831, -4.34, -4.3426, -4.3426, -4.3426, -4.348, -4.348, -4.3498, -4.3498, -4.3498, -4.3498, -4.3498, -4.3498, -4.3636, -4.3636, -4.3636, -4.3636, -4.3636, -1.9186, -3.248, -4.0276, -3.7433, -3.8936, -4.0157, -3.9361], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.6968, 1.6966, 1.6964, 1.6958, 1.6958, 1.6897, 1.6892, 1.6892, 1.6878, 1.6873, 1.6873, 1.6867, 1.6854, 1.682, 1.6811, 1.6801, 1.6801, 1.6667, 1.6667, 1.662, 1.6533, 1.6502, 1.6416, 1.5693, 1.5687, 1.5672, 1.5441, 1.5426, 1.5419, 1.5417, 1.3346, 1.4769, 1.4715, 1.1506, 0.6356, 0.6864, 2.0048, 2.0043, 2.0014, 1.9965, 1.9805, 1.9721, 1.9718, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9639, 1.9632, 1.9625, 1.9625, 1.7957, 1.6791, 0.3021, 0.5935, 2.0388, 2.0388, 2.0356, 2.0332, 2.0303, 2.0303, 2.025, 2.0204, 2.0116, 2.0116, 2.0116, 2.0116, 2.0116, 2.0116, 2.0116, 2.0116, 2.0082, 2.0077, 1.9986, 1.9986, 1.9855, 1.9854, 1.9853, 1.9853, 1.9767, 1.9661, 1.9658, 1.9658, 1.9658, 1.9658, 1.8103, 2.1618, 2.1607, 2.1607, 2.1607, 2.1607, 2.1607, 2.1607, 2.1607, 2.1607, 2.1463, 2.1184, 2.1182, 2.1134, 2.1134, 2.1133, 2.1076, 2.1016, 2.0932, 2.0932, 2.0932, 2.0932, 2.0932, 2.0586, 2.0139, 2.0134, 2.0127, 2.0125, 2.0094, 1.9927, 1.8917, 1.5848, 0.439, 2.2558, 2.2553, 2.255, 2.2548, 2.2288, 2.1892, 2.1842, 2.1766, 2.1682, 2.1673, 2.157, 2.1564, 2.1564, 2.1564, 2.1564, 2.1564, 2.1564, 2.1561, 2.1555, 2.1416, 2.1416, 2.1416, 2.1407, 2.1405, 2.1221, 2.1221, 2.1221, 2.1221, 2.1221, 2.1206, 2.0139, 1.0726, 1.5373, 1.7849, 0.3811, 2.4116, 2.4006, 2.3978, 2.3947, 2.3791, 2.3743, 2.3741, 2.3741, 2.3728, 2.3679, 2.3598, 2.3597, 2.3506, 2.3506, 2.3506, 2.3504, 2.349, 2.3397, 2.3397, 2.3394, 2.3391, 2.3372, 2.3247, 2.3247, 2.3247, 2.3247, 2.3247, 2.3232, 2.3064, 2.3059, 2.241, 2.1395, 1.9371, -0.0753, 2.5746, 2.5365, 2.5342, 2.5255, 2.5129, 2.4927, 2.4711, 2.4711, 2.4709, 2.4703, 2.4696, 2.4565, 2.4563, 2.4563, 2.4558, 2.4555, 2.4366, 2.4361, 2.4352, 2.4114, 2.4111, 2.4111, 2.4108, 2.4108, 2.4107, 2.4107, 2.4106, 2.4104, 2.4101, 2.4099, 2.1348, 0.839, 2.1891, 0.4618, 1.1391, 1.8141, 2.5944, 2.5944, 2.5944, 2.5944, 2.5944, 2.5944, 2.5797, 2.5638, 2.5527, 2.5267, 2.5169, 2.5039, 2.5039, 2.5034, 2.4896, 2.4716, 2.4708, 2.4695, 2.4695, 2.4693, 2.4436, 2.3696, 2.3427, 2.2996, 2.2191, 2.1753, 2.0394, 1.9388, 1.5145, 1.4327, 0.3074, 2.8213, 2.8103, 2.8103, 2.798, 2.7695, 2.7595, 2.7595, 2.7595, 2.7339, 2.7334, 2.7165, 2.7162, 2.7148, 2.7148, 2.7148, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.6916, 2.0578, 2.5856, 2.062, 1.7062, 2.8286, 2.808, 2.7799, 2.77, 2.7611, 2.749, 2.7345, 2.7345, 2.7345, 2.7146, 2.7131, 2.7124, 2.7123, 2.6885, 2.6881, 2.6881, 2.6881, 2.6872, 2.6872, 2.6869, 2.6869, 2.6869, 2.6869, 2.6869, 2.6869, 2.6846, 2.6846, 2.6846, 2.6846, 2.6846, 2.3185, 2.4445, 2.6134, 2.5201, 2.1037, 2.2468, 1.9871]}, \"token.table\": {\"Topic\": [2, 4, 7, 8, 4, 7, 3, 3, 8, 8, 2, 2, 2, 3, 3, 3, 9, 9, 9, 8, 8, 8, 9, 2, 2, 2, 7, 7, 7, 5, 9, 7, 7, 4, 4, 4, 4, 4, 10, 1, 2, 3, 10, 10, 10, 8, 8, 8, 1, 2, 6, 1, 6, 2, 2, 2, 2, 2, 2, 5, 6, 6, 6, 9, 9, 9, 4, 10, 4, 1, 2, 4, 4, 4, 8, 7, 2, 10, 8, 3, 10, 1, 1, 1, 2, 2, 7, 6, 6, 3, 3, 3, 9, 9, 8, 2, 2, 2, 10, 2, 4, 6, 7, 10, 2, 4, 6, 2, 4, 4, 4, 10, 10, 2, 9, 9, 3, 3, 3, 7, 7, 1, 1, 10, 5, 5, 8, 9, 8, 9, 7, 7, 1, 1, 1, 1, 7, 7, 1, 1, 6, 1, 6, 5, 1, 4, 4, 4, 4, 4, 3, 3, 8, 7, 5, 10, 7, 10, 10, 8, 8, 4, 4, 5, 5, 9, 10, 10, 6, 6, 10, 10, 10, 1, 6, 6, 6, 1, 8, 10, 10, 6, 5, 5, 8, 2, 9, 9, 9, 9, 3, 3, 3, 3, 7, 6, 6, 6, 7, 2, 2, 6, 10, 10, 2, 2, 2, 4, 10, 7, 5, 5, 7, 3, 7, 9, 3, 3, 3, 1, 6, 6, 6, 6, 6, 6, 3, 3, 3, 7, 7, 7, 4, 7, 1, 1, 1, 10, 5, 5, 5, 5, 5, 5, 8, 9, 9, 8, 9, 9, 9, 9, 9, 1, 7, 8, 5, 7, 10, 10, 10, 3, 3, 10, 2, 5, 5, 5, 10, 10, 10, 10, 4, 4, 4, 4, 1, 6, 8, 10, 4, 4, 8, 8, 1, 5, 1, 5, 5, 5, 5, 7, 6, 7, 1, 1, 1, 4, 10, 2, 7, 8, 1, 1, 3, 6, 7, 9, 7, 3, 5, 1, 1, 8, 9, 5, 5, 5, 6, 10, 8, 8, 1, 7, 4, 5, 5, 7, 10, 3, 3, 3, 1, 8, 6, 6, 7, 1, 2, 2, 5, 6, 9, 3, 7, 8, 4, 7, 6, 6, 6, 5, 10, 1, 1, 1, 3, 2, 8, 9, 9, 9, 7, 2, 6, 7, 9, 9, 9, 7, 8, 9, 6, 6, 9, 2, 4, 7, 4, 8], \"Freq\": [0.17047153574498083, 0.5473033516023069, 0.17047153574498083, 0.09869404701025207, 0.9847894047038802, 0.8707182437976662, 0.9368206566421343, 0.9368206566421505, 0.9229303692730075, 0.9229303692730181, 0.8937063799528263, 0.893706379952722, 0.9305250852494467, 0.9740509715175177, 0.968295229649514, 0.9499476593329785, 0.9543592685711397, 0.9546515420264222, 0.9051597468322045, 0.920498767821795, 0.9263431054523924, 0.7631009324785919, 0.19077523311964797, 0.893706379952767, 0.8937063799527819, 0.8937063799527433, 0.9907361840405394, 0.9363266893083778, 0.9092026105269017, 0.917086372598919, 0.8447547234177526, 0.9486717621905494, 0.9104680449082803, 0.9871582914023488, 0.9795003104226209, 0.9795003104226123, 0.9066276443353521, 0.888219790597896, 0.7761271416128569, 0.5517272483640087, 0.23645453501314656, 0.15763635667543105, 0.7825849363170596, 0.7825849363171201, 0.782584936316995, 0.9763898377331034, 0.9763898377331197, 0.9763898377331311, 0.7936519962724473, 0.23522044788234756, 0.7527054332235121, 0.921239738348974, 0.9220204125108693, 0.893706379952705, 0.8937063799527905, 0.8937063799527035, 0.8937063799527681, 0.89370637995281, 0.8937063799527718, 0.8666648691319236, 0.9008540198120447, 0.8437830652436848, 0.8437830652436343, 0.9249823337636927, 0.9249823337636872, 0.9249823337637444, 0.840577484292258, 0.16010999700804912, 0.8534796912093329, 0.1721476296976592, 0.05738254323255307, 0.7459730620231899, 0.9432622022989923, 0.9432622022990016, 0.9640368794801878, 0.8685868042983025, 0.9335595043714601, 0.9816843806331195, 0.8332120154806367, 0.9537705357267282, 0.8492292189890013, 0.9748957710384712, 0.9889320662835476, 0.9820606936170777, 0.9246500293153718, 0.9063091149290874, 0.9054826103913368, 0.9604699603533664, 0.9236492576840906, 0.9792591970298261, 0.9614082545509393, 0.9652482536284923, 0.9546515420264794, 0.9051597468323093, 0.9513204699320869, 0.8937063799528484, 0.8937063799528395, 0.8937063799527708, 0.8797771319271802, 0.03570302834947786, 0.1785151417473893, 0.08330706614878167, 0.11901009449825953, 0.5831494630414717, 0.7767854405927708, 0.07061685823570643, 0.14123371647141286, 0.9043539209511677, 0.7726759139882208, 0.9056606325797273, 0.7602885142349765, 0.9276835237795868, 0.8685027810056982, 0.9269844686383047, 0.912096597910111, 0.8049574432348762, 0.9406549354665463, 0.9167938947649192, 0.9167938947649213, 0.7660186879497901, 0.7660186879498484, 0.9628370674995609, 0.9628370674995615, 0.9187148219674369, 0.9856955105138142, 0.9832796302596798, 0.755666374612591, 0.20609082943979756, 0.8398531413276464, 0.8049864381052083, 0.8642372065501498, 0.7660603899839945, 0.9830337913669788, 0.9887314306478161, 0.9887314306478141, 0.3294172656294433, 0.631383092456433, 0.7654498530966051, 0.9261060722225829, 0.9339202185718471, 0.9502838457498547, 0.9289415073458555, 0.853190298213376, 0.8873992512463791, 0.7905638818101686, 0.7568289075589936, 0.9795003104226246, 0.9795003104226279, 0.9795003104226211, 0.9063286060142648, 0.9770387273213751, 0.9099602343392748, 0.9763898377331294, 0.8657037822330341, 0.9099976186458555, 0.041363528120266155, 0.958409736677525, 0.7825849363170085, 0.7825849363171089, 0.9763898377331455, 0.9763898377331258, 0.9795003104226312, 0.9795003104226032, 0.8597815310599881, 0.8185802488438911, 0.9194523507851168, 0.7916564938115056, 0.7916564938116213, 0.9715519811713614, 0.9024823475653857, 0.7916564938115502, 0.7916564938115016, 0.7916564938115708, 0.7457779075668679, 0.12429631792781132, 0.9526286089741905, 0.9526286089741896, 0.20404551507970767, 0.10202275753985383, 0.6631479240090499, 0.7813825569138132, 0.914883640422747, 0.894529335709332, 0.6333248333933057, 0.31666241669665285, 0.4975054923243385, 0.4353173057837962, 0.9249823337637856, 0.9249823337637062, 0.8049574432348706, 0.9167938947649518, 0.9167938947649765, 0.9167938947649277, 0.5014781797062697, 0.5014781797062697, 0.9350644087918726, 0.8715154318981916, 0.8715154318981919, 0.7683476715065943, 0.893706379952729, 0.8937063799528415, 0.7994629545038241, 0.8797771319270751, 0.8797771319271527, 0.8937063799527025, 0.8937063799527697, 0.8937063799528628, 0.9432622022989811, 0.879166858465669, 0.7643365637581252, 0.8262393913567954, 0.9495896982054033, 0.768935695962447, 0.7949864058120931, 0.13249773430201553, 0.06624886715100776, 0.9454395827906299, 0.936820656642127, 0.9368206566420728, 0.9802659490674454, 0.843783065243612, 0.8437830652436055, 0.8025569354054157, 0.9008540198120566, 0.9008540198119901, 0.843783065243667, 0.9540777941426616, 0.9540777941425678, 0.9727787479584352, 0.9451613946111507, 0.8657037822330247, 0.8244332312769198, 0.7545669842456739, 0.8990873337965642, 0.9863845016082424, 0.9824854543653633, 0.9532488086575847, 0.9462601753616814, 0.9815573676408712, 0.990208649014216, 0.9774750349580054, 0.81858467804695, 0.8922960513208366, 0.8651921665237834, 0.6391659533731909, 0.2905299788059959, 0.7976715725799535, 0.8398531413275002, 0.9249823337637652, 0.9249823337638469, 0.9249823337637583, 0.924982333763721, 0.9249823337637822, 0.16696622404663272, 0.16696622404663272, 0.5008986721398981, 0.8741424677569708, 0.3608271432088461, 0.5412407148132692, 0.8370414581241369, 0.7813825569138199, 0.9614082545509312, 0.9652482536285214, 0.7825849363170059, 0.89370637995283, 0.8922960513207988, 0.8597815310598891, 0.8185802488439081, 0.8486777953422165, 0.7778719649891119, 0.7778719649890411, 0.7778719649891381, 0.9233758963336228, 0.955576403565117, 0.9208853295321368, 0.7596569210962911, 0.3854934219648485, 0.06424890366080807, 0.12849780732161614, 0.3854934219648485, 0.9432622022990411, 0.9432622022990312, 0.8289793284771764, 0.9421282099393342, 0.6919246815120481, 0.3044468598653012, 0.9865726581376716, 0.8185846780470322, 0.8922960513208752, 0.8922960513208207, 0.9246417173131275, 0.827125663737686, 0.8454607142498184, 0.09394007936109093, 0.9805139369935952, 0.9942702669254171, 0.9774797051629801, 0.13170469122377412, 0.7902281473426447, 0.9075483482239163, 0.7654498530967266, 0.7775204793833105, 0.986572658137689, 0.9831052691687194, 0.1403423772259608, 0.1403423772259608, 0.2455991601454314, 0.4561127259843726, 0.900875339061734, 0.9525798078900277, 0.818584678047111, 0.9325139348648536, 0.9541486142012661, 0.7751515255431549, 0.12919192092385914, 0.8922960513208233, 0.8922960513208202, 0.8597815310599126, 0.1805667582134334, 0.7222670328537336, 0.9403248548436576, 0.882100111039849, 0.7874632139267514, 0.11249474484667878, 0.16503090766758202, 0.7701442357820495, 0.8986664465265037, 0.8995300061513047, 0.8448348434173446, 0.9167938947649572, 0.9167938947649473, 0.91679389476491, 0.21843661059736524, 0.7281220353245509, 0.9613529969253181, 0.8901847116724333, 0.767127430258715, 0.9755839787362925, 0.8999521618717372, 0.226824190465718, 0.14176511904107375, 0.5954134999725097, 0.8483092622899024, 0.3707323812918085, 0.18536619064590426, 0.3707323812918085, 0.9795003104226094, 0.7643365973939836, 0.8736973366656968, 0.9478008902208993, 0.9685608184684605, 0.4843277609064666, 0.4843277609064666, 0.8015646120235802, 0.973123199481485, 0.9820606936170895, 0.9350222092806311, 0.9063091149291328, 0.8409740432655983, 0.9051597468322332, 0.9249823337637456, 0.9249823337637247, 0.7631533437087521, 0.7083209054043023, 0.14166418108086046, 0.14166418108086046, 0.9249823337637345, 0.9249823337636027, 0.924982333763686, 0.8316222627520736, 0.14053481085284988, 0.7026740542642493, 0.9543686765783431, 0.8758995618039818, 0.7961123475081482, 0.9226436180810902, 0.26025823997703573, 0.6506455999425893, 0.38695870106559654, 0.5804380515983948], \"Term\": [\" \", \" \", \" \", \" \", \"  \", \"  amazon\", \"  apollo\", \"  apollo pharmacy\", \"  community\", \"  community assistance\", \"  gon\", \"  gon na\", \"  new\", \" 100\", \" 100 million\", \" 100 million investment\", \" 2\", \" 2 spend\", \" 2 spend press\", \" 2020\", \" 2020 \", \" 5\", \" 5\", \" adamtheredbeard\", \" adamtheredbeard \", \" adamtheredbeard  gwynndolin\", \" amazon\", \" amazon \", \" amazon launch\", \" amazon launch online\", \" amazon open\", \" amazon pharmacy\", \" amazon pharmacy \", \" american\", \" american consultants\", \" american consultants rx\", \" amzn\", \" amzn \", \" big\", \" business\", \" business\", \" business\", \" charles\", \" charles myrick\", \" charles myrick news\", \" community\", \" community assistance\", \" community assistance press\", \" covid19\", \" cvs\", \" cvs\", \" delivery\", \" free\", \" gon\", \" gon na\", \" gon na undercut\", \" gwynndolin\", \" gwynndolin \", \" gwynndolin  \", \" include\", \" inhalers\", \" inhalers sell\", \" inhalers sell amazon\", \" lead\", \" lead drug\", \" lead drug store\", \" new\", \" new\", \" new pharmacy\", \" news\", \" news\", \" news\", \" news headline\", \" news headline press\", \" november\", \" online\", \" p\", \" pharmacy\", \" prescription\", \" report\", \" review\", \" shake\", \" shake industry\", \" shake industry \", \" ship\", \" ship prescriptions\", \" stock\", \" walgreens\", \" walgreens \", \"100 million\", \"100 million investment\", \"100 million investment india\", \"2 spend\", \"2 spend press\", \"2020 \", \"adamtheredbeard \", \"adamtheredbeard  gwynndolin\", \"adamtheredbeard  gwynndolin \", \"alert \", \"amazon \", \"amazon \", \"amazon \", \"amazon \", \"amazon \", \"amazon  \", \"amazon  \", \"amazon  \", \"amazon   new\", \"amazon  amzn\", \"amazon  new\", \"amazon  new pharmacy\", \"amazon  pharmacy\", \"amazon announce\", \"amazon drug\", \"amazon enter\", \"amazon enter pharmacy\", \"amazon eye\", \"amazon eye potential\", \"amazon eye potential \", \"amazon jump\", \"amazon jump pharmacy\", \"amazon launch amazon\", \"amazon launch amazon pharmacy\", \"amazon launch new\", \"amazon launch online\", \"amazon launch online pharmacy\", \"amazon launch pharmacy\", \"amazon launch pharmacy\", \"amazon launch pharmacy offer\", \"amazon make\", \"amazon online\", \"amazon online pharmacy\", \"amazon open\", \"amazon open online\", \"amazon open online pharmacy\", \"amazon pharmacy \", \"amazon pharmacy \", \"amazon pharmacy  online\", \"amazon pharmacy launch\", \"amazon pharmacy prescription\", \"amazon prime\", \"amazon shake\", \"amazon start\", \"amazon unveil\", \"amazon want\", \"amazoncom \", \"american consultants\", \"american consultants rx\", \"american consultants rx service\", \"amzn \", \"apollo pharmacy\", \"apollo pharmacy \", \"assistance press\", \"bezos \", \"black friday\", \"black friday\", \"business \", \"charles myrick\", \"charles myrick news\", \"community assistance\", \"community assistance press\", \"consultants rx\", \"consultants rx service\", \"contest drug\", \"contest drug retail\", \"covid19 vaccine\", \"crunch \", \"crunch  review\", \"cvs \", \"cvs  walgreens\", \"daily crunch\", \"daily crunch \", \"daily crunch  review\", \"deliver prescription\", \"deliver prescription\", \"delivery prime\", \"delivery prime members\", \"delivery service\", \"delivery service\", \"delivery service\", \"delivery service \", \"drug \", \"drug retail\", \"drug retailers\", \"drug retailers\", \"drug store\", \"drug store\", \"drug store stock\", \"drug store stock lower\", \"enter pharmacy\", \"eye potential\", \"eye potential \", \"eye potential  100\", \"fear amazon\", \"fear amazon\", \"free delivery\", \"free delivery prime\", \"free delivery prime members\", \"gift card\", \"gon na\", \"gon na undercut\", \"goodrx \", \"google alert\", \"google alert \", \"gwynndolin \", \"gwynndolin  \", \"gwynndolin   gon\", \"headline press\", \"health care\", \"healthcare \", \"healthcare industry\", \"home delivery\", \"https \", \"india \", \"india \", \"india \", \"india  \", \"india   apollo\", \"india   apollo pharmacy\", \"industry \", \"inhalers sell\", \"inhalers sell amazon\", \"inhalers sell amazon \", \"insulin \", \"insulin  inhalers\", \"insulin  inhalers sell\", \"investment apollo\", \"investment apollo pharmacy\", \"investment india\", \"jeff bezos\", \"jeff bezos \", \"jump pharmacy\", \"know amazon\", \"launch \", \"launch amazon\", \"launch amazon pharmacy\", \"launch amazon pharmacy \", \"launch new\", \"launch online\", \"launch online pharmacy\", \"launch online pharmacy \", \"launch online pharmacy consumers\", \"launch online pharmacy new\", \"launch online pharmacy service\", \"launch pharmacy\", \"launch pharmacy\", \"launch pharmacy business\", \"launch pharmacy offer\", \"lead drug\", \"lead drug store\", \"lead drug store stock\", \"lower amazon\", \"lower amazon launch\", \"market \", \"market \", \"market \", \"medicine \", \"medicine delivery\", \"medicine delivery\", \"medicine delivery service\", \"medicine delivery service \", \"million investment\", \"million investment india\", \"myrick news\", \"na undercut\", \"new contest\", \"new contest drug\", \"new contest drug retail\", \"new macs\", \"new medicine\", \"new medicine delivery\", \"new medicine delivery service\", \"new online\", \"new online pharmacy\", \"new pharmacy\", \"new pharmacy service\", \"news \", \"news \", \"news \", \"news \", \"news headline\", \"news headline press\", \"november 2020\", \"offer \", \"online pharmacy \", \"online pharmacy \", \"online pharmacy  shake\", \"online pharmacy consumers\", \"online pharmacy new\", \"online pharmacy new contest\", \"online pharmacy service\", \"online pharmacy store\", \"online prescription\", \"online prescription\", \"open online\", \"open online pharmacy\", \"open online pharmacy \", \"pandemic \", \"pandemic \", \"pharmacies \", \"pharmacy  online\", \"pharmacy  prescription\", \"pharmacy  shake\", \"pharmacy  shake industry\", \"pharmacy business\", \"pharmacy business\", \"pharmacy business\", \"pharmacy business\", \"pharmacy business \", \"pharmacy chain\", \"pharmacy consumers\", \"pharmacy industry\", \"pharmacy launch\", \"pharmacy market\", \"pharmacy market\", \"pharmacy new\", \"pharmacy new contest\", \"pharmacy new contest drug\", \"pharmacy news\", \"pharmacy news\", \"pharmacy offer\", \"pharmacy offer \", \"pharmacy prescription\", \"pharmacy prescription\", \"pharmacy service\", \"pharmacy service\", \"pharmacy service \", \"pharmacy store\", \"plunge amazon\", \"potential \", \"potential  100\", \"potential  100 million\", \"prescription delivery\", \"prescription delivery\", \"prescription drug\", \"prescription drug \", \"prescription medication\", \"prescription medications\", \"prescriptions prime\", \"prime members\", \"prime members\", \"prime members\", \"push pharmacy\", \"report \", \"report \", \"report \", \"rx service\", \"scott galloway\", \"sell amazon\", \"sell prescription\", \"sell prescription drug\", \"service \", \"service \", \"service prescription\", \"shake industry\", \"shake industry \", \"shake pharmacy\", \"ship prescriptions\", \"special olympics\", \"spend press\", \"stock lower\", \"stock lower amazon launch\", \"stock market\", \"store \", \"store \", \"store \", \"store stock\", \"store stock lower\", \"store stock lower amazon\", \"today \", \"vaccine \", \"vaccine \", \"walgreens \", \"walgreens  cvs\", \"walgreens drop\", \"wall street\", \"week \", \"week \", \"work \", \"work \"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [10, 1, 3, 6, 8, 4, 9, 7, 2, 5]};\n",
       "\n",
       "function LDAvis_load_lib(url, callback){\n",
       "  var s = document.createElement('script');\n",
       "  s.src = url;\n",
       "  s.async = true;\n",
       "  s.onreadystatechange = s.onload = callback;\n",
       "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
       "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "}\n",
       "\n",
       "if(typeof(LDAvis) !== \"undefined\"){\n",
       "   // already loaded: just create the visualization\n",
       "   !function(LDAvis){\n",
       "       new LDAvis(\"#\" + \"ldavis_el6259698967461125897320748\", ldavis_el6259698967461125897320748_data);\n",
       "   }(LDAvis);\n",
       "}else if(typeof define === \"function\" && define.amd){\n",
       "   // require.js is available: use it to load d3/LDAvis\n",
       "   require.config({paths: {d3: \"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min\"}});\n",
       "   require([\"d3\"], function(d3){\n",
       "      window.d3 = d3;\n",
       "      LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "        new LDAvis(\"#\" + \"ldavis_el6259698967461125897320748\", ldavis_el6259698967461125897320748_data);\n",
       "      });\n",
       "    });\n",
       "}else{\n",
       "    // require.js not available: dynamically load d3 & LDAvis\n",
       "    LDAvis_load_lib(\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\", function(){\n",
       "         LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
       "                 new LDAvis(\"#\" + \"ldavis_el6259698967461125897320748\", ldavis_el6259698967461125897320748_data);\n",
       "            })\n",
       "         });\n",
       "}\n",
       "</script>"
      ],
      "text/plain": [
       "PreparedData(topic_coordinates=              x         y  topics  cluster       Freq\n",
       "topic                                                \n",
       "9     -0.337034 -0.134379       1        1  18.094153\n",
       "0      0.116981 -0.067703       2        1  12.733679\n",
       "2     -0.028013  0.318415       3        1  12.658355\n",
       "5      0.176659 -0.198235       4        1  11.256879\n",
       "7     -0.199328 -0.044491       5        1  10.349324\n",
       "3      0.058662  0.015220       6        1   8.642533\n",
       "8      0.104158 -0.031842       7        1   7.546819\n",
       "6      0.032694  0.035323       8        1   7.279567\n",
       "1      0.014244  0.162548       9        1   5.739111\n",
       "4      0.060978 -0.054856      10        1   5.699579, topic_info=                       Term       Freq      Total Category  logprob  loglift\n",
       "30                   amazon  88.000000  88.000000  Default  30.0000  30.0000\n",
       "326           launch online  67.000000  67.000000  Default  29.0000  29.0000\n",
       "132                 amazon   84.000000  84.000000  Default  28.0000  28.0000\n",
       "327  launch online pharmacy  64.000000  64.000000  Default  27.0000  27.0000\n",
       "159    amazon launch online  62.000000  62.000000  Default  26.0000  26.0000\n",
       "..                      ...        ...        ...      ...      ...      ...\n",
       "392               pandemic    5.905243   7.592744  Topic10  -4.0276   2.6134\n",
       "413           pharmacy news   7.847114  11.076236  Topic10  -3.7433   2.5201\n",
       "456                service    6.751793  14.453022  Topic10  -3.8936   2.1037\n",
       "345       medicine delivery   5.975574  11.085641  Topic10  -4.0157   2.2468\n",
       "371                   news    6.470983  15.564468  Topic10  -3.9361   1.9871\n",
       "\n",
       "[370 rows x 6 columns], token_table=      Topic      Freq         Term\n",
       "term                              \n",
       "0         2  0.170472             \n",
       "0         4  0.547303             \n",
       "0         7  0.170472             \n",
       "0         8  0.098694             \n",
       "1         4  0.984789             \n",
       "...     ...       ...          ...\n",
       "495       2  0.922644  wall street\n",
       "497       4  0.260258        week \n",
       "497       7  0.650646        week \n",
       "498       4  0.386959        work \n",
       "498       8  0.580438        work \n",
       "\n",
       "[380 rows x 3 columns], R=30, lambda_step=0.01, plot_opts={'xlab': 'PC1', 'ylab': 'PC2'}, topic_order=[10, 1, 3, 6, 8, 4, 9, 7, 2, 5])"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pyLDAvis.sklearn.prepare(lda_tf, dtm_tf, tf_vectorizer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": [
    "text = pd.read_csv('amazon_articles.csv')\n",
    "\n",
    "#Remove the columns\n",
    "text = text.drop(columns=['title'], axis=1)\n",
    "#, 'crawled', 'entities', 'external_images', 'external_links', 'highlightText', 'highlightThreadTile', \n",
    "#                          'highlightTitle', 'language', 'ord_in_thread', 'parent_url', 'published', 'rating', 'thread',\n",
    "#                         'title', 'updated', 'url', 'uuid'], axis=1)\n",
    "\n",
    "import gensim\n",
    "from gensim.utils import simple_preprocess\n",
    "def sent_to_words(sentences):\n",
    "    for sentence in sentences:\n",
    "        yield(gensim.utils.simple_preprocess(str(sentence), deacc=True))  # deacc=True removes punctuations\n",
    "data = text.values.tolist()\n",
    "data_words = list(sent_to_words(data))\n",
    "\n",
    "from nltk.corpus import stopwords\n",
    "stop_words = stopwords.words('english')\n",
    "stop_words.extend(['from', 'subject', 're', 'edu', 'use'])\n",
    "\n",
    "def remove_stopwords(texts):\n",
    "    return [[word for word in simple_preprocess(str(doc)) if word not in stop_words] for doc in texts]\n",
    "\n",
    "def lemmatization(texts, allowed_postags=['NOUN', 'ADJ', 'VERB', 'ADV']):\n",
    "    \"\"\"https://spacy.io/api/annotation\"\"\"\n",
    "    texts_out = []\n",
    "    for sent in texts:\n",
    "        doc = nlp(\" \".join(sent)) \n",
    "        texts_out.append([token.lemma_ for token in doc if token.pos_ in allowed_postags])\n",
    "\n",
    "import spacy\n",
    "data_words_nostops = remove_stopwords(data_words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Coherence Score:  0.4097714771144682\n"
     ]
    }
   ],
   "source": [
    "id2word = corpora.Dictionary(data_words)\n",
    "\n",
    "texts = data_words_nostops\n",
    "\n",
    "corpus = common_corpus\n",
    "\n",
    "from gensim.models import CoherenceModel\n",
    "cm = CoherenceModel(model=model, texts= data_words_nostops, corpus=common_corpus, coherence='c_v')\n",
    "coherence = cm.get_coherence()  \n",
    "print('\\nCoherence Score: ', coherence)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "topic_taxonomy = {\n",
    "     \"Organization\":\n",
    "     {\n",
    "        \"Amazon Pharmacy\":  \"Amazon Pharmacy AMZ\",\n",
    "        \"CVS\":  \"CVS\",\n",
    "        \"Walgreens\": \"Walgreens\",\n",
    "        \"Government\": \"U.S. Food and Drug Administration FDA Division of Drug Information CDER The Office of Drug Evaluation\" \n",
    "     },\n",
    "     \"Health\":\n",
    "     {\n",
    "         \"Medicines\": \"Levothyroxine\tLevothroid\tLevoxyl\tSynthroid\tUnithroid\tLisinopril\tPrinivil\tZestril\tAtorvastatin\tLipitor\tAmlodipine\tNorvasc\tMetoprolol\tLopressor \tToprol XL\tOmeprazole\tPrilosec\tSimvastatin\tZocor\tLosartan\tCozaar\tAlbuterol\tAccuneb\tProair\tProventil\tVentolin\tGabapentin \tNeurontin\tHydrochlorothiazide \tEsidrix\tHydrodiuril\tMicrozide\tOretic\tZide\tHydrocodone\tAcetaminophen\tLortab\tNorco\tVicodin\tSertraline \tZoloft\tFurosemide \tLasix\tFluticasone\tFlonase\tFlovent\tCutivate\tTylenol\tAmoxicillin\tAmoxil\tPolymox\tTrimox\tAlprazolam\tXanax\tAtenolol\tTenormin\tCitalopram\tCelexa\tInsulin glargine\tLantus\tToujeo\tMontelukast\tSingulair\tTrazodone\tDesyrel\tPantoprazole\tProtonix\tEscitalopram\tLexapro\tPravastatin\tPravachol\tBupropion\tBudeprion\tBuproban\tWellbutrin\tZyban\tFluoxetine\tProzac\tRapiflux\tSarafem\tSelfemra\tCarvedilol\tCoreg\tPrednisone\tDeltasone\tTamsulosin\tFlomax\tPotassium\tK-Dur\tKlor-Con\tKlotrix\tMicro-K\tSlow-Kclopidogrel\tPlavix\tIbuprofen\tAdvil\tMotrin\tMeloxicam\tMobic\tRosuvastatin\tCrestor\tAspirin\tTramadol\tUltram\tZolpidem\tAmbien\tIntermezzo\tWarfarin\tCoumadin\tClonazepam Klonopin\tPropranolol \tInderal\tInnoPran\tPronol\tGlipizide\tGlucotrol\tDextroamphetamine\tamphetamine salts \tAdderall\tCyclobenzaprine\tFlexeril\tMethylphenidate\tConcerta\tMetadate\tRitalin\tDuloxetine\tCymbalta\tAzithromycin\tZithromax\tRanitidine\tZantac\tMetformin Hydrochloride\tLosartan Potassium\tGabapentin\tAcetaminophen\tHydrocodone Bitartrate\tHydrochlorothiazide\tSertraline Hydrochloride\tFurosemide\tPantoprazole Sodium\tEscitalopram Oxalate\tFluoxetine Hydrochloride\tDextroamphetamine\tDextroamphetamine Saccharate\tAmphetamine\tAmphetamine Aspartate\tTramadol Hydrochloride\tPravastatin Sodium\tTrazodone Hydrochloride\tTamsulosin Hydrochloride\tClopidogrel Bisulfate\tClonazepam\tOxycodone\tAllopurinol\tVenlafaxine\tHydrochlorothiazide\tLisinopril\tPropranolol Hydrochloride\tHydrochlorothiazide\tLosartan Potassium\tCetirizine\tEstradiol\tEthinyl Estradiol\tNorethindrone\tLorazepam\tQuetiapine Fumarate\tZolpidem Tartrate\tErgocalciferol\tBudesonide\tFormoterol\tSpironolactone\tOndansetron\tInsulin Aspart\tApixaban\tNaproxen\tLamotrigine\tFluticasone Propionate\tSalmeterol Xinafoate\tPregabalin\tGlimepiride\tDiclofenac\tFenofibrate\tParoxetine\tClonidine\tLoratadine\tDiltiazem Hydrochloride\tHydroxyzine\tAmitriptyline\tDoxycycline\tEthinyl Estradiol\tNorgestimate\tLisdexamfetamine Dimesylate\tSitagliptin Phosphate\tLatanoprost\tCephalexin\tTizanidine\tFinasteride\tLovastatin\tTopiramate\tInsulin Lispro\tSulfamethoxazole\tTrimethoprim\tBuspirone Hydrochloride\tOseltamivir Phosphate\tFerrous Sulfate\tAmoxicillin\tClavulanate Potassium\tValsartan\tLevetiracetam\tHydralazine Hydrochloride\tMirtazapine\tRivaroxaban\tAripiprazole\tOxybutynin\tEsomeprazole\tAlendronate Sodium\tFolic Acid\tTriamcinolone\tTiotropium\tThyroid\tCiprofloxacin\tIsosorbide Mononitrate\tSumatriptan\tInsulin Detemir\tBenzonatate\tFamotidine\tDiazepam\tRopinirole Hydrochloride\tHydrochlorothiazide\tTriamterene\tBenazepril Hydrochloride\tMetronidazole\tMethocarbamol\tNifedipine\tBaclofen\tMethotrexate\tTestosterone\tEzetimibe\tCelecoxib\tGuanfacine\tDonepezil Hydrochloride\tHydroxychloroquine\tClindamycin\tDivalproex Sodium\tMorphine\tEthinyl Estradiol\tLevonorgestrel\tPrednisolone\tEnalapril Maleate\tPioglitazone\tCyanocobalamin\tNorethindrone\tMeclizine Hydrochloride\tValacyclovir\tAlbuterol Sulfate\tIpratropium Bromide\tDocusate\tLiraglutide\tHydrocortisone\tVerapamil Hydrochloride\tCefdinir\tNortriptyline Hydrochloride\tTimolol\tDulaglutide\tPromethazine Hydrochloride\tAcyclovir\tFluconazole\tMethylprednisolone\tMetformin Hydrochloride\tSitagliptin Phosphate\tRamipril\tDexmethylphenidate Hydrochloride\tBrimonidine Tartrate\tOxcarbazepine\tRisperidone\tLevofloxacin\tChlorthalidone\tAtomoxetine Hydrochloride\tPolyethylene Glycol 3350\tCalcium\tCholecalciferol\tMupirocin\tEthinyl Estradiol\tEtonogestrel\tDrospirenone\tEthinyl Estradiol\tPhentermine\tCarbidopa\tLevodopa\tOmega-3-acid Ethyl Esters\tDesogestrel\tEthinyl Estradiol\tGuaifenesin\tRizatriptan Benzoate\tIrbesartan\tProgesterone\tDoxazosin Mesylate\tLinagliptin\tAdalimumab\tNitrofurantoin\tBudesonide\tAmlodipine Besylate\tBenazepril Hydrochloride\tHydrochlorothiazide\tValsartan\tDigoxin\tAcetaminophen\tButalbital\tInsulin Degludec\tKetoconazole\tNitroglycerin\tTemazepam\tAmiodarone Hydrochloride\tMemantine Hydrochloride\tCanagliflozin\tKetorolac Tromethamine\tLiothyronine Sodium\tLithium\tDicyclomine Hydrochloride\tPramipexole Dihydrochloride\tNebivolol Hydrochloride\tTerazosin\tMagnesium\tColchicine\tSucralfate\tMedroxyprogesterone Acetate\tGlyburide\tCarbamazepine\tGemfibrozil\tNystatin\tSildenafil\tPrazosin Hydrochloride\tBeclomethasone\tLinaclotide\tDesvenlafaxine\tInsulin Human\tInsulin Isophane Human\tClobetasol Propionate\tEmpagliflozin\tLansoprazole\tErythromycin\tGuaifenesin\tCodeine Phosphate\tPseudoephedrine Hydrochloride\tBumetanide\tDexlansoprazole\tMometasone\tEstrogens, Conjugated\tHydromorphone Hydrochloride\tLetrozole\tOlanzapine\tLevocetirizine Dihydrochloride\tCyclosporine\tDapagliflozin\tLabetalol\tAnastrozole\tMesalamine\tSodium\tMirabegron\tLidocaine\tMycophenolate Mofetil\tOfloxacin\tIndomethacin\tPenicillin V\tMetoclopramide Hydrochloride\tOlmesartan Medoxomil\tAzelastine Hydrochloride\tEmtricitabine\tEpinephrine\tIpratropium\tTamoxifen Citrate\tLurasidone Hydrochloride\tBuprenorphine\tCalcitriol\tRanolazine\tDorzolamide Hydrochloride\tTimolol Maleate\tFormoterol Fumarate\tMometasone Furoate\tBetamethasone\tCalcium\tTadalafil\tDextroamphetamine Sulfate\tMethimazole\tUmeclidinium Bromide\tVilanterol Trifenatate\tUmeclidinium Bromide\tDiphenhydramine Hydrochloride\tTicagrelor\tFexofenadine Hydrochloride\tSotalol Hydrochloride\tSodium Fluoride\tInsulin Isophane\tSolifenacin Succinate\tFlecainide Acetate\tBenztropine Mesylate\tEszopiclone\tPolymyxin B Sulfate\tTrimethoprim Sulfate\tPhenytoin\tBromfenac Sodium\tPrednisolone Acetate\tGatifloxacin\tTorsemide\tSennosides\tTolterodine Tartrate\tBimatoprost\tEtanercept\tTravoprost\tMinocycline Hydrochloride\tBisoprolol Fumarate\tHydrochlorothiazide\tNabumetone\tIsotretinoin\tDoxepin Hydrochloride\tPrimidone\tDexamethasone\tBisoprolol Fumarate\tExenatide\tChlorhexidine\tEthinyl Estradiol\tNorgestrel\tDutasteride\tModafinil\tOlopatadine\tFentanyl\tTelmisartan\tPolyethylene Glycol 3350\tTretinoin\tDexamethasone\tNeomycin Sulfate\tPolymyxin B Sulfate\tPseudoephedrine\tInsulin Human\tSacubitril\tValsartan\tPancrelipase Lipase\tPancrelipase Protease\tPancrelipase Amylase\tBrompheniramine Maleate\tDextromethorphan Hydrobromide\tPseudoephedrine Hydrochloride\"\n",
    "     },\n",
    "     \"Shipping\":\n",
    "     {\n",
    "        \"Shipping\": \"Accessorial service\tAccrual\tAcquiescence\tAd Valorem\tAd Valorem Duty\tAd Valorem Freight\tAdvice of Shipment\tAdvising bank\tAffreight\tAffreightment Contract of\tAgent (Agt.)\tAir Freight Forwarder\tAir waybill\tAll commodity rate\tAll inclusive rate (AI)\tAllowance\tAlso Notify Party\tApparent Authority\tApparent Good Order\tArbitrary\tArbitration\tArrival notice\tAwkward cargo\tB/L Master\tBank guarantee\tBareboat Charter Party\tBasic freight\tBdl.\tBerth term\tBill of lading (B/L)\tBill of lading Ton\tBlack powder content\tBlanket waybill\tBlocked train\tBlocking or bracing\tBls.\tBobtail\tBona fide\tBond\tBond port\tBonded Logistics Park (Center)\tBonded freight\tBonded indemnity\tBonded warehouse\tBooking\tBooking number\tBooking status\tBottom air delivery\tBox\tBoxcar\tBreak-bulk cargo\tBreakbulk (BB)\tBritish Thermal Unit (BTU)\tBroken stowage\tBroker\tBrokerage\tBrokerage license\tBulk carriers\tBulk freight\tBulk-freight container\tBull rings\tBunker surcharge (BAF BSC)\tBunkers\tBx.\tC-TPAT/CTPAT\tC.A.F.\tC.B.M. (C.M.)\tC.F. (Cu. Ft.)\tC.F.S.\tC.I.\tC.K.D.\tC.M.\tC.O.D.\tC.O.F.C.\tC.O.G.S.A.\tCFCs Chlorofluorocarbons\tCFR\tCFS/CFS\tCFS/CY\tCIF\tCIP\tCPT\tCSC\tCSI\tCY\tCY/CFS\tCY/CY\tCapacity/Weight (Container)\tCaptains protest\tCar pooling\tCargo manifest\tCargo nature\tCarload\tCarload rate\tCarnet\tCarrier\tCarriers lien\tCartage\tCellular vessel\tCertificate of origin\tCharter party (C/P)\tChartered ship\tCharterer\tChassis\tChilling\tChilling injury\tChock\tClean bill of lading\tClearance limits\tCleared without examination\tClip-on\tClosing date\tCollapsible container\tCollecting bank\tCombined transport\tCombined transport document (CTD)\tCombined transport operator (CTO)\tCommercial invoice\tCommodity\tCommodity rate\tCommon carrier\tCommon tariff\tCompressor\tConcealed damage\tConcealed loss\tCondenser\tConference\tConference rate\tConfirmed letter of credit\tConfirming bank\tConnecting carrier\tConsignee\tConsignor\tConsolidated cargo\tConsolidation\tConsolidator\tConsortium\tContainer\tContainer freight station (CFS C.F.S.)\tContainer gross weight\tContainer load plan (CLP)\tContainer number\tContainer part load\tContainer seal number\tContainer service charge\tContainer size\tContainer status\tContainer type\tContainerizable cargo\tContainerization\tContainerload\tContainership\tContract carrier\tControlled atmosphere (CA)\tCopy B/L\tCorner castings\tCorner posts (door posts)\tCorrection memo\tCorrector\tCost matrix\tCost insurance and freight (C.I.F.)\tCredit agreement\tCu.\tCubic foot\tCustom house\tCustomer’s own transport\tCustomhouse broker\tCustoms bonded warehouse\tCustoms invoice\tCut-off time\tCwt.\tD & H\tD.W.\tDAF\tDDC\tDDP\tDDU\tDEQ\tDES\tDFG\tDOT\tDST\tDangerous Cargo\tDangerous Goods\tDead Space\tDeadweight Tonnage (D/W)\tDedicated Unit Train\tDelivery Order\tDemurrage (Dem.)\tDeployment\tDepot Container\tDestination\tDetention\tDetention Charge\tDevanning\tDifferential Rate\tDistribution\tDiversion\tDivert\tDock\tDock Receipt\tDockage\tDocumentary Credit\tDoor-to-Door\tDouble-Deck Load\tDray\tDrayage\tDry Cargo\tDry Dock\tDry-Bulk Container\tDunnage (Dge.)\tDuty Free Zone\tDwell Time\tECU\tETA\tETD\tEXW\tEn route\tEntry Declaration\tEthylene\tEvaporation\tEvaporator\tEx Work\tExpiry Date\tExport\tExport Declaration\tExpress B/L\tF.A.K.\tF.A.S.\tF.C.L.\tF.E.U.\tF.I.O.\tF.O.B.\tFAS\tFCA\tFCL/FCL\tFCL/LCL\tFDA\tFEFC\tFEU\tFF\tFMC\tFOB\tFeeder Service\tFeeder Vessel\tFinal Destination (FND)\tFlash Point\tForwarder\tFree Trade Zone\tFreight\tFreight Ton\tFresh Air Exchange (FAE)\tFumigation\tG.R.I.\tGATT\tGateway\tGeneral Average\tGeneral Order\tGenerator Set\tGenset (Generator Set)\tGooseneck\tGross Tonnage\tGross Weight\tGroupage\tHague Rules\tHague-Visby Rules\tHamburg Rules\tHarmonized Commodity Description and Coding System\tHatch\tHaulage\tHaulier\tHeavy Lift\tHeavy-Lift Charge\tHigh Cube\tHouse B/L\tHouse-to-House (H/H)\tHouse-to-Pier (H/P)\tHub\tHull\tHull Underwriter\tI.C.C.\tI.M.C.O.\tI.P.I.\tIATA Cargo Agent\tIFP\tIMDG Code\tISPS\tImport\tImport License\tImport Permit\tIn Transit\tInbound\tInbound Editing\tIncoterms\tInland Clearance Depot\tInsulated Container\tInsulated Tank Container\tInsurance\tInsurance Certificate\tInsurance With Average-Clause\tInsurance All-Risk\tInsurance General-Average\tInsurance Particular-Average\tInterchange\tInterchange Points\tIntercoastal\tIntermodal\tIntermodal Transport\tInternet Applications - Shipment Detail\tInterstate\tInterstate Traffic\tIntrastate\tIntrastate Traffic\tIssuing Bank\tKnot\tL.C.L.\tLCL - NVO\tLCL/FCL\tLCL/LCL\tLetter of Credit\tLetter of Indemnity\tLien\tLift-On/Lift-Off (LO-LO)\tLighter\tLighterage\tLine-haul\tLiner\tLiner Terms\tLiter\tLloyds Registry\tLo/Lo\tLoad Factor\tLoadwire\tLocking Bar\tLogistics\tLong Ton\tLongshoreman\tLoose\tLow-Bed\tM.L.B.\tM/V\tMQC\tMT\tMalpractice\tManifest\tManifest Traveling\tMaritime\tMarks & Nos.\tMaster Bill of Ladings\tMaster Lease\tMaster Lease Leasing Cost\tMates Receipt\tMaximum Payload\tMaximum Rate\tMeasurement Ton\tMemo B/L\tMicrobridge\tMileage\tMini Landbridge (MLB)\tMini-Bridge\tMinimum Charge\tModified Atmosphere (MA)\tMultimodal Transport\tN.O.I.B.N.\tN.O.S.\tN.V.O.C.C.\tNVOCC\tNegotiable B/L\tNegotiating Bank\tNet Tonnage\tNet Weight\tNeutral Body\tNon-negotiable B/L\tNon-vessel Owning / Operating Common Carrier (N.V.O.C.C.)\tO.C.P. rate\tOBL\tOcean Bill of Lading (Ocean B/L)\tOcean Freight\tOcean Route\tOn Board\tOn Board B/L\tOn Deck\tOne-Way lease\tOpen-Top Container\tOrigin\tOriginal Bill of Lading (O.B.L.)\tOutbound\tOverage\tOverheight Cargo\tOverland Common Point (O.C.P.)\tOverwidth\tP.& I.\tP.O.D.\tP.O.L.\tP.O.R.\tP/A\tPLRMU\tPSA\tPTI (Pre-trip Inspection)\tPWSC\tPallet\tPanama Canal Act\tPartial Shipments\tParticipating Carrier (Tariff)\tPartlow\tPartlow chart\tPayable Elsewhere\tPayload\tPer Diem\tPerils of the Sea\tPerishable Cargo\tPier\tPier-to-House (P/H)\tPier-to-Pier (P/P)\tPiggyback\tPilferage\tPilot\tPlace of Delivery\tPlace of Receipt\tPool (Container)\tPort\tPort Service Charge\tPort of Call\tPort of Discharge\tPort of Entry\tPort of Loading (POL)\tPort of arrival\tPower Pack\tPower of Attorney\tPratique Certificate\tPre-cooling\tPrepaid (Ppd.)\tPro Rata\tProtest\tPull-down\tQuarantine\tQuarantine buoy\tQuarantine declaration\tQuarantine dues\tQuarantine flag\tQuarantine harbor\tQuarantine signal\tQuarantine station\tQuay rent\tQuota\tRail Onboard B/L\tRailhead\tRamp\tReceipt for shipment B/L\tReconsignment (R/C)\tReefer\tRefrigerant\tRegistrar Accreditation Board (RAB)\tRelative Humidity\tRelay\tRelease note\tRespiration\tReturn air\tRevenue ton (R/T)\tRoll-On/Roll-Off (Ro/Ro)\tRoute (Rte.)\tRyan\tS.D.D.\tS.D.P.\tSCM\tSED\tSI\tSSN\tSTC\tSalvage loss\tSea waybill\tSeal (Container)\tSeal record\tService contract\tShip chandler\tShip owner\tShipped bill of lading\tShipped on board\tShipper\tShipper owned container\tShippers Export Declaration\tShippers Load & Count\tShipping order\tShipping permit\tShipside Delivery\tShort Term Lease\tShort cycling\tShut-out\tSlot\tSpreader\tStability\tStack Car\tStack Train\tStandard Industrial Classification (SIC)\tStandard International Trade Classification (SITC)\tStandard Rate\tStevedore\tStorage\tStore-Door Delivery (STOR/DOR)\tStore-Door PickUp\tStowage\tStraddle Carrier\tStraight Bill of Lading\tStripping\tStuffing\tSupply Chain Management\tSupply air\tSurcharge\tT-floor\tT.E.U.\tT.I.R.\tT.O.F.C.\tTDR\tTEU\tTHC\tTOS\tTRC\tTSN - Time-Space Network\tTVR\tTail\tTank Container\tTare Weight\tTariff (Trf.)\tTender\tTerminal\tThrough Rate\tThrough Service (Thru Service)\tTime Charter\tTonnage\tTontines\tTop air delievery\tTowage\tTramp\tTranship\tTransit Cargo\tTransit Port\tTransshipment Port\tTruck Onboard B/L\tTurnaround\tTwist Locks\tTwo-Way Pallet\tU.S.M.\tUCP\tUCP500\tUN\tUNCTAD\tUNCTAD MMO\tUSDA\tUnit Load\tUnit Train\tUnitization\tVCTSN \tVirtual Capacity Time-Space Network\tVanning\tVentilated Container\tVerified Gross Mass \tVGM\tVessels Manifest\tVol.\tVoyage Direction\tVoyage Number\tWarehouse\tWaybill \tWB\tWeight Cargo\tWharfage \tWhfge\tcm\"\n",
    "     },\n",
    "     \"Delivery\":\n",
    "     {\n",
    "        \"Delivery\":  \"Home Address Zip Code Town Freight Plane Apartment Package Packing Prime Truck Pick up\",\n",
    "     },    \n",
    "     \"Ecommerce\":\n",
    "     {\n",
    "        \"Ecommerce\":  \"SC\tSeller Central\tVC\tVendor Central\t3P\tThird-party seller \tAdvantage \tFBA\tFulfilled by Amazon\tFBM\tFulfilled by Merchant\tSFP\tSeller Fulfilled Prime \tPAN EU\tFC\tFulfilment Centre\tEFN\tEuropean Fulfilment Network\tMCI\tMulti-Country Inventory \tEAN\tEuropean Article Number \tGTIN\tGlobal Trade Identification Number \tISBN\tInternational Standard Book Number \tASIN\tAmazon Standard Identification Number \tSKU\tStock Keeping Unit \tadvertising\tAMG\tAmazon Media Group \tAMS\tAmazon Marketing Services \tDSP\tDemand Side Platform \tAAP \tAmazon Advertising Platform\tHSAs\tHeadline Search Ads \tPDAs\tProduct Display Ads \tSP\tSponsored Products \tLSA\tLock Screen Ads \tA+ \tEBC\tEnhanced Brand Content \tStorefront \tVine Voices \tACoS\tAdvertising Cost of Sale \treporting\tCOGS\tCost of Goods Sold \tRetail Revenue \tP-COGS \tContra-COGS \tSales Discounts \tPPM\tPure Product Margin \tNetPPM – SD\tNet Pure Profit Margin minus Sales Discounts \tRetail Fast Track BuyBox \tRepOOS\tReplenishable Out of Stock \tLBB\tLost Buy Box \tVLT\tVendor Lead Time \tProbRec\tProblem Receive \tBrand Registry \tBuy Box \tLightning Deals \tVerified Review \tBrowse Nodes \tAffiliate\tBlog \tCMS \tContent Management System\tConversion Rate \tCTA \tCall To Action\tCRO\tConversion Rate Optimisation\tDropshipping \tDomain Name \tEbay \tEcommerce \tEvolutionary Algorithms \tFulfilment \tGoogle Analytics \tGoogle Webmaster Tools \tInventory \tLong Tail \tLanding Page \tLogistics \tMargin \tMulti-Channel Ecommerce \tOutsource \tOlark \tPPC \tPayment Gateway \tPaypal \tPay Per Click \tSEO \tSERP \tSocial Signals \tSocial Media \tSplit Testing \tTraffic \tUsability\tWholesale \tWordPress \tWP Engine\"\n",
    "     }\n",
    "    }"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gensim, operator\n",
    "from scipy import spatial\n",
    "import numpy as np\n",
    "from gensim.models import KeyedVectors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "def vocab_check(vectors, words):\n",
    "\n",
    "    output = list()\n",
    "    for word in words:\n",
    "        if word in vectors.vocab:\n",
    "            output.append(word.strip())\n",
    "        \n",
    "    return output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calc_similarity(input1, input2, vectors):\n",
    "    s1words = set(vocab_check(vectors, input1.split()))\n",
    "    s2words = set(vocab_check(vectors, input2.split()))\n",
    "\n",
    "    output = vectors.n_similarity(s1words, s2words)\n",
    "    return output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [],
   "source": [
    "def classify_topics(input, vectors):\n",
    "    feed_score = dict()\n",
    "    for key, value in topic_taxonomy.items():\n",
    "        max_value_score = dict()\n",
    "        for label, keywords in value.items():\n",
    "            max_value_score[label] = 0\n",
    "            topic = (key + ' ' + keywords).strip()\n",
    "            max_value_score[label] += float(calc_similarity(input, topic, vectors))\n",
    "\n",
    "            sorted_max_score = sorted(max_value_score.items(), key=operator.itemgetter(1), reverse=True)[0]\n",
    "            feed_score[sorted_max_score[0]] = sorted_max_score[1]\n",
    "    return sorted(feed_score.items(), key=operator.itemgetter(1), reverse=True)[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading Word2Vec model...\n",
      "Finished loading Word2Vec model...\n"
     ]
    }
   ],
   "source": [
    "model_path = '/Users/javierlasa/Downloads/wordvec/'\n",
    "def load_wordvec_model(modelName, modelFile, flagBin):\n",
    "    print('Loading ' + modelName + ' model...')\n",
    "    model = KeyedVectors.load_word2vec_format(model_path + modelFile, binary=flagBin)\n",
    "    print('Finished loading ' + modelName + ' model...')\n",
    "    return model\n",
    "\n",
    "model_word2vec = load_wordvec_model('Word2Vec', 'GoogleNews-vectors-negative300.bin', True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "([('Walgreens', 0.3735729455947876), ('Shipping', 0.32539650797843933), ('Ecommerce', 0.3119170069694519)],)\n",
      "([('Ecommerce', 0.34261244535446167), ('Shipping', 0.33746498823165894), ('Medicines', 0.3019953668117523)],)\n",
      "([('Shipping', 0.3171371817588806), ('Ecommerce', 0.2812742590904236), ('CVS', 0.23283356428146362)],)\n",
      "([('Amazon Pharmacy', 0.3972618579864502), ('Shipping', 0.3551642894744873), ('Ecommerce', 0.3461659550666809)],)\n",
      "([('Walgreens', 0.35508227348327637), ('Shipping', 0.3339124917984009), ('Ecommerce', 0.3167673945426941)],)\n",
      "([('Amazon Pharmacy', 0.4432898163795471), ('Ecommerce', 0.31570857763290405), ('Shipping', 0.30580174922943115)],)\n",
      "([('Walgreens', 0.3536291718482971), ('Shipping', 0.3294084966182709), ('Ecommerce', 0.3287859559059143)],)\n",
      "([('Walgreens', 0.4085548222064972), ('CVS', 0.3547872304916382), ('Shipping', 0.3253345489501953)],)\n",
      "([('Walgreens', 0.35676565766334534), ('Shipping', 0.3469219207763672), ('CVS', 0.30309152603149414)],)\n",
      "([('Shipping', 0.28568804264068604), ('Ecommerce', 0.28302499651908875), ('Government', 0.2752073109149933)],)\n",
      "([('Shipping', 0.2787896394729614), ('Ecommerce', 0.24896633625030518), ('Walgreens', 0.15058386325836182)],)\n",
      "([('Walgreens', 0.3532087802886963), ('Amazon Pharmacy', 0.31280380487442017), ('Shipping', 0.30850744247436523)],)\n",
      "([('Shipping', 0.30933481454849243), ('Government', 0.2622150778770447), ('Ecommerce', 0.2578164339065552)],)\n",
      "([('Shipping', 0.29949381947517395), ('Government', 0.27759599685668945), ('Walgreens', 0.2768234312534332)],)\n",
      "([('Shipping', 0.29447418451309204), ('Ecommerce', 0.270046591758728), ('Government', 0.21029797196388245)],)\n",
      "([('Shipping', 0.31711429357528687), ('Government', 0.3117479979991913), ('Ecommerce', 0.2719354033470154)],)\n",
      "([('Shipping', 0.3078504800796509), ('Walgreens', 0.2955789566040039), ('CVS', 0.2768745422363281)],)\n",
      "([('Ecommerce', 0.3578207194805145), ('Shipping', 0.35040175914764404), ('Amazon Pharmacy', 0.3438054621219635)],)\n",
      "([('Shipping', 0.3023812770843506), ('Ecommerce', 0.27585381269454956), ('Government', 0.17365412414073944)],)\n",
      "([('Shipping', 0.36946335434913635), ('Ecommerce', 0.3625296354293823), ('Amazon Pharmacy', 0.3065357804298401)],)\n",
      "([('Ecommerce', 0.4159192442893982), ('Amazon Pharmacy', 0.3985063433647156), ('Shipping', 0.3857657313346863)],)\n",
      "([('Ecommerce', 0.471839964389801), ('Shipping', 0.44443264603614807), ('Amazon Pharmacy', 0.4350915253162384)],)\n",
      "([('Ecommerce', 0.37390679121017456), ('Shipping', 0.36242353916168213), ('Amazon Pharmacy', 0.27835550904273987)],)\n",
      "([('Shipping', 0.4711781144142151), ('Ecommerce', 0.4054313004016876), ('Government', 0.27151989936828613)],)\n",
      "([('Shipping', 0.47072434425354004), ('CVS', 0.45232975482940674), ('Ecommerce', 0.4406052231788635)],)\n",
      "([('Ecommerce', 0.41523122787475586), ('Shipping', 0.41136544942855835), ('Amazon Pharmacy', 0.2696644961833954)],)\n",
      "([('Ecommerce', 0.3950835168361664), ('Shipping', 0.3690892159938812), ('Amazon Pharmacy', 0.33976221084594727)],)\n",
      "([('Ecommerce', 0.36654528975486755), ('Shipping', 0.35739201307296753), ('Medicines', 0.33367717266082764)],)\n",
      "([('Shipping', 0.41872918605804443), ('Government', 0.3908977210521698), ('Ecommerce', 0.38448697328567505)],)\n",
      "([('Shipping', 0.48395684361457825), ('Ecommerce', 0.4419921636581421), ('Medicines', 0.404347687959671)],)\n",
      "([('Shipping', 0.3275463879108429), ('Medicines', 0.32108163833618164), ('Ecommerce', 0.3006729483604431)],)\n",
      "([('Shipping', 0.2534344494342804), ('Ecommerce', 0.24388007819652557), ('CVS', 0.17461973428726196)],)\n",
      "([('Shipping', 0.31814873218536377), ('Ecommerce', 0.28140586614608765), ('Government', 0.20488151907920837)],)\n",
      "([('Shipping', 0.2519211173057556), ('Ecommerce', 0.2140820175409317), ('Walgreens', 0.12209133058786392)],)\n",
      "([('Shipping', 0.35977602005004883), ('Ecommerce', 0.3181424140930176), ('Government', 0.2526547908782959)],)\n",
      "([('Shipping', 0.2606246769428253), ('Ecommerce', 0.2393959015607834), ('Walgreens', 0.18908922374248505)],)\n",
      "([('Shipping', 0.41283273696899414), ('Ecommerce', 0.3800521492958069), ('Medicines', 0.38001054525375366)],)\n",
      "([('Shipping', 0.3000258505344391), ('Ecommerce', 0.25944626331329346), ('Medicines', 0.24874047935009003)],)\n",
      "([('CVS', 0.27968406677246094), ('Shipping', 0.26421093940734863), ('Ecommerce', 0.24993017315864563)],)\n",
      "([('Shipping', 0.2818777859210968), ('Ecommerce', 0.23015747964382172), ('Government', 0.20200121402740479)],)\n",
      "([('Shipping', 0.3611503839492798), ('Medicines', 0.2951609194278717), ('Ecommerce', 0.28967761993408203)],)\n",
      "([('Amazon Pharmacy', 0.5422918796539307), ('Ecommerce', 0.483203262090683), ('Shipping', 0.4358532428741455)],)\n",
      "([('Ecommerce', 0.36663636565208435), ('Shipping', 0.35975584387779236), ('Medicines', 0.34573400020599365)],)\n",
      "([('Ecommerce', 0.4204978048801422), ('Amazon Pharmacy', 0.41654717922210693), ('Shipping', 0.41572362184524536)],)\n",
      "([('Shipping', 0.41290682554244995), ('Ecommerce', 0.3895537257194519), ('Amazon Pharmacy', 0.34762659668922424)],)\n",
      "([('Shipping', 0.34670525789260864), ('Ecommerce', 0.30018150806427), ('Government', 0.19973310828208923)],)\n",
      "([('Shipping', 0.3579667806625366), ('Medicines', 0.30461397767066956), ('Ecommerce', 0.3038010895252228)],)\n",
      "([('Shipping', 0.332450807094574), ('Ecommerce', 0.2899094820022583), ('Medicines', 0.2416187822818756)],)\n",
      "([('Shipping', 0.305285781621933), ('Ecommerce', 0.2572917342185974), ('Government', 0.22230830788612366)],)\n",
      "([('Shipping', 0.30348676443099976), ('Ecommerce', 0.258491575717926), ('Medicines', 0.24586883187294006)],)\n",
      "([('Shipping', 0.26788678765296936), ('Ecommerce', 0.24099384248256683), ('Government', 0.14036589860916138)],)\n",
      "([('Walgreens', 0.4590424597263336), ('CVS', 0.45695415139198303), ('Amazon Pharmacy', 0.41059431433677673)],)\n",
      "([('Shipping', 0.4038439393043518), ('Ecommerce', 0.3657786250114441), ('Medicines', 0.24850723147392273)],)\n",
      "([('Shipping', 0.42170020937919617), ('Ecommerce', 0.3572676181793213), ('CVS', 0.3297281265258789)],)\n",
      "([('Shipping', 0.39646777510643005), ('Ecommerce', 0.38800910115242004), ('CVS', 0.30516791343688965)],)\n",
      "([('Shipping', 0.38460099697113037), ('Ecommerce', 0.336556613445282), ('Government', 0.2716449499130249)],)\n",
      "([('Shipping', 0.4139918088912964), ('Ecommerce', 0.37591540813446045), ('Amazon Pharmacy', 0.3192518949508667)],)\n",
      "([('Shipping', 0.3290467858314514), ('Ecommerce', 0.28674203157424927), ('Medicines', 0.25892573595046997)],)\n",
      "([('Ecommerce', 0.36933422088623047), ('Shipping', 0.35205012559890747), ('Walgreens', 0.30239975452423096)],)\n",
      "([('Walgreens', 0.5020809173583984), ('CVS', 0.3609355688095093), ('Amazon Pharmacy', 0.35536128282546997)],)\n",
      "([('Ecommerce', 0.38606858253479004), ('Shipping', 0.3794808089733124), ('Walgreens', 0.3713945746421814)],)\n",
      "([('Ecommerce', 0.3752679228782654), ('Shipping', 0.3534577488899231), ('Walgreens', 0.3297387361526489)],)\n",
      "([('Shipping', 0.33222752809524536), ('Ecommerce', 0.2967816889286041), ('Medicines', 0.2645694613456726)],)\n",
      "([('Shipping', 0.35679060220718384), ('Ecommerce', 0.2808176279067993), ('Government', 0.21076110005378723)],)\n",
      "([('Shipping', 0.3173425793647766), ('Government', 0.2678372859954834), ('Medicines', 0.2569398880004883)],)\n"
     ]
    }
   ],
   "source": [
    "output1 = classify_topics('Walgreens has rolled out a new kind of store that shrinks down its square footage and focuses on the pharmacy', model_word2vec),\n",
    "print(output1)\n",
    "\n",
    "output2 = classify_topics('Expect to see fewer front-of-store items, a slimmed down selection of over-the-counter medications and an emphasis on relationships between pharmacists and customers', model_word2vec),\n",
    "print(output2)\n",
    "\n",
    "output3 = classify_topics('It has opened more than 30 small-format pharmacies as part of a pilot, and it may open additional ones depending on how the stores perform', model_word2vec),\n",
    "print(output3)\n",
    "\n",
    "output4 = classify_topics('Along with feeling the heat from CVS Health and other drugstores, Walmart and Amazon are both expanding their health care focus', model_word2vec),\n",
    "print(output4)\n",
    "\n",
    "output5 = classify_topics('Walmart has opened four clinics that offer a broad array of services at a low price, including primary care and dental care, in addition to the pharmacies it has at many of its big-box stores', model_word2vec),\n",
    "print(output5)\n",
    "\n",
    "output6 = classify_topics('Amazon bought PillPack two years ago, laying the foundation for the company to expand into pharmacy', model_word2vec),\n",
    "print(output6)\n",
    "\n",
    "output7 = classify_topics('Walgreens is balancing its investment with cost-cutting efforts that have included layoffs and hundreds of store closures', model_word2vec),\n",
    "print(output7)\n",
    "\n",
    "output8 = classify_topics('Walgreens has turned some of its more than 9,200 U.S. stores into “neighborhood health destinations” — a term it uses to describe locations with health care services along with a pharmacy', model_word2vec),\n",
    "print(output8)\n",
    "\n",
    "output9 = classify_topics('She said the small-format pharmacy was inspired in part by Walgreens stores near health care systems that are smaller in size and cater to customers picking up medication after getting discharged from the hospital', model_word2vec),\n",
    "print(output9)\n",
    "\n",
    "output10 = classify_topics('Instead, they’ll notice a sharper focus on health and wellness products like vitamins, over-the-counter medications, thermometers and Band-Aids, Shah said', model_word2vec),\n",
    "print(output10)\n",
    "\n",
    "output11 = classify_topics('She said it’s changed the mix of products, depending on what customers want', model_word2vec),\n",
    "print(output11)\n",
    "\n",
    "output12 = classify_topics('Pharmacists play a central role in the new kind of store — and Walgreens hopes that personalized care will ultimately lead to better health outcomes, Shah said', model_word2vec),\n",
    "print(output12)\n",
    "\n",
    "output13 = classify_topics('She said the company sees the smaller stores as a place where more people can have one-on-one conversations with pharmacists, particularly those taking multiple medications or with complex and chronic conditions', model_word2vec),\n",
    "print(output13)\n",
    "\n",
    "output14 = classify_topics('Shah said the company is testing the small-format pharmacies in diverse locations, including urban, suburban and rural areas', model_word2vec),\n",
    "print(output14)\n",
    "\n",
    "output15 = classify_topics('Even as people order prescriptions online or get them delivered to their door, Shah said brick-and-mortar locations still play an important role', model_word2vec),\n",
    "print(output15)\n",
    "\n",
    "output16 = classify_topics('The company considers a variety of factors when deciding where to open the stores, such as whether there’s a need for more pharmacies and greater health care access, Shah said', model_word2vec),\n",
    "print(output16)\n",
    "\n",
    "output17 = classify_topics('Those include pharmacy deserts, where customers don’t have a nearby place to pick up prescriptions', model_word2vec),\n",
    "print(output17)\n",
    "\n",
    "output18 = classify_topics('When Seattle-headquartered Amazon announced its foray into e-pharmacy in the US recently, traders’ groups, pharma associations as well as big businesses in India took notice', model_word2vec),\n",
    "print(output18)\n",
    "\n",
    "output19 = classify_topics('Players with interest in this space are keenly looking out for Amazon’s next move and whether India would figure prominently in its e-pharmacy plans.', model_word2vec),\n",
    "print(output19)\n",
    "\n",
    "output20 = classify_topics('So far, the American e-commerce major has taken only baby steps in the pharmacy segment in India and Amazon executives have pointed out there’s no timeline for a commercial launch in the country yet', model_word2vec),\n",
    "print(output20)\n",
    "\n",
    "output21 = classify_topics('Amazon has launched an online delivery service offering big discounts for prescription medicine in the US, as pharmacies become the latest sector to be disrupted by the retail giant', model_word2vec),\n",
    "print(output21)\n",
    "\n",
    "output22 = classify_topics('Amazon Pharmacy, which will offer discounts of up to 80 per cent on generic drugs for Prime subscribers paying without insurance, either on its site or at more than 50,000 bricks-and-mortar pharmacies nationwide, will become a direct challenger to retailers such as Walgreens and CVS Health', model_word2vec),\n",
    "print(output22)\n",
    "\n",
    "output23 = classify_topics('The world’s largest online retailer is also offering discounts of up to 40 per cent on branded medicines, it said in a statement on Tuesday', model_word2vec),\n",
    "print(output23)\n",
    "\n",
    "output24 = classify_topics('The recurring nature of pharmacy, and relatively small package size, should also integrate well into Amazon’s existing logistics orders to increase gross profit dollars per shipment', model_word2vec),\n",
    "print(output24)\n",
    "\n",
    "output25 = classify_topics('Shares in competitors were shaken by the announcement. Walgreens Boots Alliance fell more than 9 per cent by afternoon trading on Tuesday, while CVS Health, the largest pharmacy operator in the US, dropped 9 per cent and Rite Aid shed more than 16 per cent', model_word2vec),\n",
    "print(output25)\n",
    "\n",
    "output26 = classify_topics('Shares in GoodRx, a California-based company that offers discount partnerships with 75,000 US pharmacies, tumbled 20 per cent', model_word2vec),\n",
    "print(output26)\n",
    "\n",
    "output27 = classify_topics('Setting up the store during the pandemic could help Amazon as online sales of other products such as groceries have rapidly grown while people have been stuck at home', model_word2vec),\n",
    "print(output27)\n",
    "\n",
    "output28 = classify_topics('Although prescription medicines have lagged behind other products in selling online, consumers could be tempted by the convenience of ordering from Amazon, and the discounts available', model_word2vec),\n",
    "print(output28)\n",
    "\n",
    "output29 = classify_topics('Analysts warn regulatory compliance — particularly how the drugs are stored and shipped — presents a big hurdle for Amazon to overcome', model_word2vec),\n",
    "print(output29)\n",
    "\n",
    "output30 = classify_topics('The store will also not deliver Schedule 2 medication, which includes many opioids', model_word2vec),\n",
    "print(output30)\n",
    "\n",
    "output31 = classify_topics('Customers seeking prescriptions tend to be loyal to local pharmacists, in part because of the sensitive nature of medication', model_word2vec),\n",
    "print(output31)\n",
    "\n",
    "output32 = classify_topics('They also tend to be older, making them less likely to shop online', model_word2vec),\n",
    "print(output32)\n",
    "\n",
    "output33 = classify_topics('There are intricacies in this sub-segment that may be tougher to break, from a relationship perspective, than in any other segment of retail', model_word2vec),\n",
    "print(output33)\n",
    "\n",
    "output34 = classify_topics('I would never discount Amazon. It can afford to spend an awful lot of money and absorb a big margin hit', model_word2vec),\n",
    "print(output34)\n",
    "\n",
    "output35 = classify_topics('Avoiding stores and getting your necessities delivered to your door is not just convenient, it is very necessary in the ongoing COVID-19 pandemic', model_word2vec),\n",
    "print(output35)\n",
    "\n",
    "output36 = classify_topics('Luckily, you can get basically anything you want without stepping into a store -- including your prescriptions', model_word2vec),\n",
    "print(output36)\n",
    "\n",
    "output37 = classify_topics('Prescription delivery services can be a game-changer if you are unable to go the standard pharmacy route for your prescription refill', model_word2vec),\n",
    "print(output37)\n",
    "\n",
    "output38 = classify_topics('Of course, finding a way to get your prescription medication delivered is very important if you are home sick and dont want to spread germs, but there are so many other reasons a patient may want to get their medication delivered direct to their door', model_word2vec),\n",
    "print(output38)\n",
    "\n",
    "output39 = classify_topics('Seniors might have trouble making it to the pharmacy', model_word2vec),\n",
    "print(output39)\n",
    "\n",
    "output40 = classify_topics('Women may not have time to pick up their birth control each month', model_word2vec),\n",
    "print(output40)\n",
    "\n",
    "output41 = classify_topics('It can be easy to become disorganized and fall behind on refills for maintenance medications', model_word2vec),\n",
    "print(output41)\n",
    "\n",
    "output42 = classify_topics('Amazon Pharmacy is a new online pharmacy that offers prescription refills and free delivery for Amazon Prime members', model_word2vec),\n",
    "print(output42)\n",
    "\n",
    "output43 = classify_topics('Amazon takes your health insurance to help pay for your medications and is also offering a prescription savings benefit if you arent using health insurance', model_word2vec),\n",
    "print(output43)\n",
    "\n",
    "output44 = classify_topics('Amazon Pharmacy lets customers compare prescription costs for their medications with an insurance co-pay, without insurance and the Prime Discount, so they can find the least-expensive option', model_word2vec),\n",
    "print(output44)\n",
    "\n",
    "output45 = classify_topics('PillPack is a medication delivery service owned and operated by Amazon that offers free delivery, and takes most types of health insurance', model_word2vec),\n",
    "print(output45)\n",
    "\n",
    "output46 = classify_topics('The service does not cost anything more than what you pay for medication, which is a great deal considering the extra benefits you get compared to a standard pharmacy service', model_word2vec),\n",
    "print(output46)\n",
    "\n",
    "output47 = classify_topics('Once you get your prescriptions set up to be filled through PillPack, you simply pay the copay for your medication, and your medications will be shipped to you every month', model_word2vec),\n",
    "print(output47)\n",
    "\n",
    "output48 = classify_topics('Besides offering free delivery, those extra benefits include organizing and separating your medications for each day.', model_word2vec),\n",
    "print(output48)\n",
    "\n",
    "output49 = classify_topics('Every day pills are placed into a convenient single-serve pack, and the time you are supposed to take them is even printed on the front', model_word2vec),\n",
    "print(output49)\n",
    "\n",
    "output50 = classify_topics('This is a huge perk if you take a lot of medications and spend time sorting them out, and also if you have difficulty remembering what time you are supposed to take your pills', model_word2vec),\n",
    "print(output50)\n",
    "\n",
    "output51 = classify_topics('If you are a caretaker for someone else, this can also be a huge time saver', model_word2vec),\n",
    "print(output51)\n",
    "\n",
    "output52 = classify_topics('CVS Pharmacy offers one- to two-day delivery and same day (on-demand) delivery in most cities', model_word2vec),\n",
    "print(output52)\n",
    "\n",
    "output53 = classify_topics('Same day delivery is usually fulfilled within hours, which is great for when you need your meds ASAP', model_word2vec),\n",
    "print(output53)\n",
    "\n",
    "output54 = classify_topics('CVS does charge a delivery fee for prescriptions, but some health insurance plans may cover the fee, including Medicare Part D', model_word2vec),\n",
    "print(output54)\n",
    "\n",
    "output55 = classify_topics('If you join CVS membership program, CarePass for $5 a month, you get free delivery for your prescriptions, plus free one- to two-day delivery for other items', model_word2vec),\n",
    "print(output55)\n",
    "\n",
    "output56 = classify_topics('It is important to remember that ordering items from CVS.com is not the same service as prescription delivery, so those will take several days or longer to ship', model_word2vec),\n",
    "print(output56)\n",
    "\n",
    "output57 = classify_topics('Walmart Pharmacy does offer free standard shipping for prescriptions, but you will have to wait around 5-7 days for your medications', model_word2vec),\n",
    "print(output57)\n",
    "\n",
    "output58 = classify_topics('If you need your medications faster, you can pay an additional $8 for second-day delivery, or $15 for overnight delivery', model_word2vec),\n",
    "print(output58)\n",
    "\n",
    "output59 = classify_topics('Walmart has an app to help make the prescription management and refill process easier and more efficient', model_word2vec),\n",
    "print(output59)\n",
    "\n",
    "output60 = classify_topics('AllianceRx is Walgreens combined specialty and home delivery pharmacy', model_word2vec),\n",
    "print(output60)\n",
    "\n",
    "output61 = classify_topics('For non-specialty medications, you can get free next-day delivery with Walgreens Express', model_word2vec),\n",
    "print(output61)\n",
    "\n",
    "output62 = classify_topics('Walgreens Express is your best bet for individual or one-time prescriptions you need now', model_word2vec),\n",
    "print(output62)\n",
    "\n",
    "output63 = classify_topics('With AllianceRx, you can get up to 90 days of your prescriptions filled, plus automatic refills', model_word2vec),\n",
    "print(output63)\n",
    "\n",
    "output64 = classify_topics('Because it can cover up to three months of medication, the delivery takes about 10 days since it is delivered by standard mail for free', model_word2vec),\n",
    "print(output64)\n",
    "\n",
    "output65 = classify_topics('AllianceRx is what you would request if you have chronic health conditions or specialty medications you know you will need filled for the foreseeable future', model_word2vec),\n",
    "print(output65)\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
